var searchIndex = new Map(JSON.parse('[["bitflags",{"t":"TEKRTTFKNNQMNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNCNNNNNNCNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNFKKNNNNNNHHHNNNMHHHNNNM","n":["ALL","BitFlags","Bits","","EMPTY","FLAGS","Flag","Flags","all","","bitflags","bits","borrow","borrow_mut","complement","","contains","","difference","","empty","","fmt","from","from_bits","","from_bits_retain","from_bits_truncate","","from_name","","insert","","intersection","","intersects","","into","is_all","","is_empty","","is_named","is_unnamed","iter","","","iter_names","","name","new","parser","remove","","set","","symmetric_difference","","toggle","","try_from","try_into","type_id","union","","value","Iter","IterNames","borrow","","borrow_mut","","from","","into","","into_iter","","next","","remaining","try_from","","try_into","","type_id","","ParseError","ParseHex","WriteHex","borrow","borrow_mut","empty_flag","fmt","","from","from_str","from_str_strict","from_str_truncate","into","invalid_hex_flag","invalid_named_flag","parse_hex","to_writer","to_writer_strict","to_writer_truncate","try_from","try_into","type_id","write_hex"],"q":[[0,"bitflags"],[66,"bitflags::iter"],[87,"bitflags::parser"],[110,"bitflags::traits"],[111,"core::fmt"],[112,"core::option"],[113,"core::result"],[114,"core::any"]],"i":"f``d10``00`0n0111111110011111111111110111100`111100`11111111000110``AlAn10101010100101010```Bd00000```000Bh```111Bn","f":"````````{{}{{d{}{{b{c}}}}}f}0`{{{h{{d{}{{b{c}}}}}}}cf}{h{{h{c}}}{}}{{{h{j}}}{{h{jc}}}{}}{{{d{}{{b{c}}}}}{{d{}{{b{c}}}}}f}0{{{h{{d{}{{b{c}}}}}}{d{}{{b{c}}}}}lf}0{{{d{}{{b{c}}}}{d{}{{b{c}}}}}{{d{}{{b{c}}}}}f}066{{{h{{n{c}}}}{h{jA`}}}AbAd}{cc{}}{c{{Af{{d{}{{b{c}}}}}}}f}0{c{{d{}{{b{c}}}}}f}00{{{h{Ah}}}{{Af{{d{}{{b{c}}}}}}}f}0{{{h{j{d{}{{b{c}}}}}}{d{}{{b{c}}}}}Ajf}06677{{}c{}}{{{h{{d{}{{b{c}}}}}}}lf}000{{{h{{n{c}}}}}l{}}0`{{{h{{d{}{{b{c}}}}}}}{{Al{{d{}{{b{c}}}}}}}f}0{{{h{{d{}{{b{c}}}}}}}{{An{{d{}{{b{c}}}}}}}f}0{{{h{{n{c}}}}}{{h{Ah}}}{}}{{{h{Ah}}c}{{n{c}}}{}}`77{{{h{j{d{}{{b{c}}}}}}{d{}{{b{c}}}}l}Ajf}0>>88{c{{B`{e}}}{}{}}{{}{{B`{c}}}{}}{hBb}{{{d{}{{b{c}}}}{d{}{{b{c}}}}}{{d{}{{b{c}}}}}f}0{{{h{{n{c}}}}}{{h{c}}}{}}``{h{{h{c}}}{}}0{{{h{j}}}{{h{jc}}}{}}0{cc{}}0????{{{h{j{Al{c}}}}}{{Af{e}}}d{}}{{{h{j{An{c}}}}}{{Af{e}}}d{}}{{{h{{An{c}}}}}{{h{c}}}{}}::9988```54{{}Bd}{{{h{Bd}}{h{jA`}}}Ab}05{{{h{Ah}}}{{B`{cBd}}}d}00{{}c{}}{cBdBf}0{{{h{Ah}}}{{B`{BhBd}}}}{{{h{c}}e}{{B`{AjBj}}}dBl}00{c{{B`{e}}}{}{}}{{}{{B`{c}}}{}}{hBb}{{{h{Bn}}c}AbBl}","D":"Jf","p":[[17,"Bits"],[10,"Flags",0,110],[10,"Bits",0,110],[1,"reference"],[0,"mut"],[1,"bool"],[5,"Flag",0,110],[5,"Formatter",111],[8,"Result",111],[10,"Debug",111],[6,"Option",112],[1,"str"],[1,"unit"],[5,"Iter",66],[5,"IterNames",66],[6,"Result",113],[5,"TypeId",114],[5,"ParseError",87],[10,"Display",111],[10,"ParseHex",87],[5,"Error",111],[10,"Write",111],[10,"WriteHex",87]],"r":[[1,110],[2,110],[6,110],[7,110]],"b":[[93,"impl-Debug-for-ParseError"],[94,"impl-Display-for-ParseError"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAABsACgACAAAADQABABcAAAA9AAIARQADAE0AAwBSAAUAWwABAF4AAQBrAAIA"}],["embedded_hal",{"t":"CCCCCKNMNKRGKPKPPKGKNNNNNNNNNNNNNNNNNNNNMMMMMNNNMMNNNNNNNNPKPPPKRGKKPGGPPPIIPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNKRGKPKNNNNNNNNNNNMNMNMNNNNNNNPPPPKRGKPPPSSSSFPGPPGGPKKPPPNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNMNNOOMNMMNMNNNNNNNNNNNNNNNNMN","n":["delay","digital","i2c","pwm","spi","DelayNs","delay_ms","delay_ns","delay_us","Error","","ErrorKind","ErrorType","High","InputPin","Low","Other","OutputPin","PinState","StatefulOutputPin","borrow","","borrow_mut","","clone","","clone_to_uninit","","cmp","eq","","fmt","","","from","","","hash","into","","is_high","is_low","is_set_high","is_set_low","kind","","not","partial_cmp","set_high","set_low","set_state","toggle","try_from","","try_into","","type_id","","Address","AddressMode","ArbitrationLoss","Bus","Data","Error","","ErrorKind","ErrorType","I2c","NoAcknowledge","NoAcknowledgeSource","Operation","Other","Overrun","Read","SevenBitAddress","TenBitAddress","Unknown","Write","borrow","","","borrow_mut","","","clone","","clone_to_uninit","","cmp","","eq","","","fmt","","","","","from","","","hash","","into","","","kind","","partial_cmp","","read","transaction","try_from","","","try_into","","","type_id","","","write","write_read","Error","","ErrorKind","ErrorType","Other","SetDutyCycle","borrow","borrow_mut","clone","clone_to_uninit","cmp","eq","fmt","","from","hash","into","kind","","max_duty_cycle","partial_cmp","set_duty_cycle","set_duty_cycle_fraction","set_duty_cycle_fully_off","set_duty_cycle_fully_on","set_duty_cycle_percent","try_from","try_into","type_id","CaptureOnFirstTransition","CaptureOnSecondTransition","ChipSelectFault","DelayNs","Error","","ErrorKind","ErrorType","FrameFormat","IdleHigh","IdleLow","MODE_0","MODE_1","MODE_2","MODE_3","Mode","ModeFault","Operation","Other","Overrun","Phase","Polarity","Read","SpiBus","SpiDevice","Transfer","TransferInPlace","Write","borrow","","","","","borrow_mut","","","","","clone","","","","clone_to_uninit","","","","cmp","eq","","","","","flush","fmt","","","","","","from","","","","","hash","into","","","","","kind","","partial_cmp","phase","polarity","read","","transaction","transfer","","transfer_in_place","","try_from","","","","","try_into","","","","","type_id","","","","","write",""],"q":[[0,"embedded_hal"],[5,"embedded_hal::delay"],[9,"embedded_hal::digital"],[58,"embedded_hal::i2c"],[123,"embedded_hal::pwm"],[152,"embedded_hal::spi"],[251,"core::cmp"],[252,"core::fmt"],[253,"core::hash"],[254,"core::result"],[255,"core::option"],[256,"core::any"],[257,"core::marker"]],"i":"``````d00`Ef``n`0l```01010101001001011001Aj0An0B`343Bd002454545Bj`Bh01`Eh```1``11Bl``302302302323232302233023023230Bn334C`045245245200`Ej``Ch`00000000000Cj1Cl200000222Db0DfDh`El``2D`0`````3`33``2``22204Dd431504315041504415043Dl26155426154526154E`66221Ed0202048376483764837620","f":"``````{{{f{bd}}h}j}00```````````{f{{f{c}}}{}}0{{{f{b}}}{{f{bc}}}{}}0{{{f{l}}}l}{{{f{n}}}n}{fj}0{{{f{l}}{f{l}}}A`}{{{f{l}}{f{l}}}Ab}{{{f{n}}{f{n}}}Ab}{{{f{l}}{f{bAd}}}Af}0{{{f{n}}{f{bAd}}}Af}{cc{}}0{Abn}{{{f{l}}{f{bc}}}jAh}{{}c{}}0{{{f{bAj}}}{{Al{Abc}}}{}}0{{{f{bAn}}}{{Al{Abc}}}{}}0{{{f{B`}}}l}>{nc{}}{{{f{l}}{f{l}}}{{Bb{A`}}}}{{{f{bBd}}}{{Al{jc}}}{}}0{{{f{bBd}}n}{{Al{jc}}}{}}{{{f{bAn}}}{{Al{jc}}}{}}{c{{Al{e}}}{}{}}0{{}{{Al{c}}}{}}0{fBf}0````````````````````{f{{f{c}}}{}}00{{{f{b}}}{{f{bc}}}{}}00{{{f{Bh}}}Bh}{{{f{Bj}}}Bj}{fj}0{{{f{Bh}}{f{Bh}}}A`}{{{f{Bj}}{f{Bj}}}A`}{{{f{Bh}}{f{Bh}}}Ab}{{{f{Bj}}{f{Bj}}}Ab}{{{f{Bl}}{f{Bl}}}Ab}{{{f{Bh}}{f{bAd}}}Af}0{{{f{Bj}}{f{bAd}}}Af}0{{{f{Bl}}{f{bAd}}}Af}{cc{}}00{{{f{Bh}}{f{bc}}}jAh}{{{f{Bj}}{f{bc}}}jAh}{{}c{}}00{{{f{Bn}}}Bh}?{{{f{Bh}}{f{Bh}}}{{Bb{A`}}}}{{{f{Bj}}{f{Bj}}}{{Bb{A`}}}}{{{f{bC`}}c{f{b{Cd{Cb}}}}}{{Al{je}}}Cf{}}{{{f{bC`}}c{f{b{Cd{Bl}}}}}{{Al{je}}}Cf{}}{c{{Al{e}}}{}{}}00{{}{{Al{c}}}{}}00{fBf}00{{{f{bC`}}c{f{{Cd{Cb}}}}}{{Al{je}}}Cf{}}{{{f{bC`}}c{f{{Cd{Cb}}}}{f{b{Cd{Cb}}}}}{{Al{je}}}Cf{}}``````{f{{f{c}}}{}}{{{f{b}}}{{f{bc}}}{}}{{{f{Ch}}}Ch}{fj}{{{f{Ch}}{f{Ch}}}A`}{{{f{Ch}}{f{Ch}}}Ab}{{{f{Ch}}{f{bAd}}}Af}0{cc{}}{{{f{Ch}}{f{bc}}}jAh}{{}c{}}{{{f{Cj}}}Ch}8{{{f{Cl}}}Cn}{{{f{Ch}}{f{Ch}}}{{Bb{A`}}}}{{{f{bCl}}Cn}{{Al{jc}}}{}}{{{f{bCl}}CnCn}{{Al{jc}}}{}}{{{f{bCl}}}{{Al{jc}}}{}}0{{{f{bCl}}Cb}{{Al{jc}}}{}}{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{fBf}````````````````````````````{f{{f{c}}}{}}0000{{{f{b}}}{{f{bc}}}{}}0000{{{f{D`}}}D`}{{{f{Db}}}Db}{{{f{Dd}}}Dd}{{{f{Df}}}Df}{fj}000{{{f{Df}}{f{Df}}}A`}{{{f{D`}}{f{D`}}}Ab}{{{f{Db}}{f{Db}}}Ab}{{{f{Dd}}{f{Dd}}}Ab}{{{f{Df}}{f{Df}}}Ab}{{{f{{Dh{c}}}}{f{{Dh{c}}}}}AbDj}{{{f{bDl}}}{{Al{jc}}}{}}{{{f{D`}}{f{bAd}}}Af}{{{f{Db}}{f{bAd}}}Af}{{{f{Dd}}{f{bAd}}}Af}{{{f{Df}}{f{bAd}}}Af}0{{{f{{Dh{c}}}}{f{bAd}}}AfDn}{cc{}}0000{{{f{Df}}{f{bc}}}jAh}{{}c{}}0000{{{f{E`}}}Df}{{{f{Df}}}Df}{{{f{Df}}{f{Df}}}{{Bb{A`}}}}``{{{f{bDl}}{f{b{Cd{c}}}}}{{Al{je}}}Eb{}}{{{f{bEd}}{f{b{Cd{c}}}}}{{Al{je}}}Eb{}}{{{f{bEd}}{f{b{Cd{{Dh{c}}}}}}}{{Al{je}}}Eb{}}{{{f{bDl}}{f{b{Cd{c}}}}{f{{Cd{c}}}}}{{Al{je}}}Eb{}}{{{f{bEd}}{f{b{Cd{c}}}}{f{{Cd{c}}}}}{{Al{je}}}Eb{}}43{c{{Al{e}}}{}{}}0000{{}{{Al{c}}}{}}0000{fBf}0000{{{f{bDl}}{f{{Cd{c}}}}}{{Al{je}}}Eb{}}{{{f{bEd}}{f{{Cd{c}}}}}{{Al{je}}}Eb{}}","D":"A@f","p":[[0,"mut"],[10,"DelayNs",5],[1,"reference"],[1,"u32"],[1,"unit"],[6,"ErrorKind",9],[6,"PinState",9],[6,"Ordering",251],[1,"bool"],[5,"Formatter",252],[8,"Result",252],[10,"Hasher",253],[10,"InputPin",9],[6,"Result",254],[10,"StatefulOutputPin",9],[10,"Error",9],[6,"Option",255],[10,"OutputPin",9],[5,"TypeId",256],[6,"ErrorKind",58],[6,"NoAcknowledgeSource",58],[6,"Operation",58],[10,"Error",58],[10,"I2c",58],[1,"u8"],[1,"slice"],[10,"AddressMode",58],[6,"ErrorKind",123],[10,"Error",123],[10,"SetDutyCycle",123],[1,"u16"],[6,"Polarity",152],[6,"Phase",152],[5,"Mode",152],[6,"ErrorKind",152],[6,"Operation",152],[10,"PartialEq",251],[10,"SpiBus",152],[10,"Debug",252],[10,"Error",152],[10,"Copy",257],[10,"SpiDevice",152],[10,"ErrorType",9],[10,"ErrorType",58],[10,"ErrorType",123],[10,"ErrorType",152]],"r":[],"b":[[31,"impl-Debug-for-ErrorKind"],[32,"impl-Display-for-ErrorKind"],[93,"impl-Debug-for-ErrorKind"],[94,"impl-Display-for-ErrorKind"],[95,"impl-Debug-for-NoAcknowledgeSource"],[96,"impl-Display-for-NoAcknowledgeSource"],[135,"impl-Display-for-ErrorKind"],[136,"impl-Debug-for-ErrorKind"],[208,"impl-Display-for-ErrorKind"],[209,"impl-Debug-for-ErrorKind"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAHgAEgAVAA0AJQABAC4AAgA1AAUATwATAGYAAQBsAAIAcQAIAIIABwCLAAAAjgAAAJAAAACWAAIAtQAXAM4ABQDZAAAA4AABAOsADgA="}],["manyhow",{"t":"KKKKRRRFPFFKRRRRKKPRRRIKFKKNNNNMMNNNHQQNNNNNNNNMMMNNNNMNMNNHQNQQNNNQNNNNNNNNNNNNNNNNHQNNNNNNNNNNNMNNNXNNNNNNNNMQNNNNMNNNHNNNNNNNNNNNNNNN","n":["AnyTokenStream","Attachment","AttributeMacroHandler","DeriveMacroHandler","Dummy","","","Emitter","Err","Error","ErrorMessage","FunctionMacroHandler","Input","","Item","","JoinToTokensError","MacroOutput","Ok","Output","","","Result","ResultExt","SilentError","SpanRanged","ToTokensError","add","","add_assign","","attachment","","","","","attribute","","bail","borrow","","","","borrow_mut","","","","call","","","call_site","clear","context","","context_with","","convert","","default","derive","","emit","","ensure","error","","","error_message","extend","","fmt","","","","","from","","","","","","","","","function","","help","","","into","","","","into_result","into_token_stream","","is_empty","join","","","","manyhow","new","","note","","","push","span_joined","","span_range","","spanned","to_string","to_token_stream","","to_tokens","","","","to_tokens_span_range","try_from","","","","try_into","","","","type_id","","","","warning","",""],"q":[[0,"manyhow"],[136,"manyhow::error"],[137,"core::fmt"],[138,"core::ops::function"],[139,"proc_macro2"],[140,"core::iter::traits::collect"],[141,"syn::error"],[142,"manyhow::span_ranged"],[143,"core::option"],[144,"core::ops::range"],[145,"quote::to_tokens"],[146,"alloc::string"],[147,"core::result"],[148,"core::any"],[149,"manyhow_macros"]],"i":"````BjBlBh`Ah```3121``0321`````bf1nA`Af533```Cd5430543987431116An74``4``225`6416554166666654``22516544d05Cn387`764478D`00`88222498`498749874987558","f":"```````````````````````````{{bc}ed{}}{{fc}ed{}}{{{j{hb}}c}ld}{{{j{hn}}c}ld}{{A`{j{Ab}}c}A`Ad}{{Af{j{Ab}}c}AfAd}{{{Ah{ce}}{j{Ab}}g}{{Ah{ce}}}{}{A`d}Ad}{{f{j{Ab}}c}fAd}0{{ceAjAa}AcAlAl{}AlAlAlAn{{Bh{g}{{B`{i}}{Bb{k}}{Bd{m}}{Bf{o}}}}}Al}``{j{{j{c}}}{}}000{{{j{h}}}{{j{hc}}}{}}000{{{Bj{}{{Bb{c}}{Bd{e}}{Bf{g}}}}c{j{he}}{j{hn}}}g{}{}{}}{{{Bl{}{{B`{c}}{Bd{e}}{Bf{g}}}}c{j{he}}{j{hn}}}g{}{}{}}{{{Bh{}{{Bb{c}}{B`{e}}{Bd{g}}{Bf{i}}}}ce{j{hg}}{j{hn}}}i{}{}{}{}}{cfAd}{{{j{hn}}}l}{{Afc}{{Ah{eb}}}d{}}0{{Afe}{{Ah{gb}}}d{{Bn{}{{Bf{c}}}}}{}}{{{Ah{ce}}i}{{Ah{cb}}}{}dd{{Bn{}{{Bf{g}}}}}}{An{{Ah{C`b}}}}{{{Ah{ce}}}{{Ah{C`b}}}And}{{}n}{{cm}oAl{}AlAlAn{{Bl{e}{{B`{g}}{Bd{i}}{Bf{k}}}}}Al}`{{{j{hn}}c}ld}``{{Afc}AfAd}0{{fc}fAd}`{{{j{hb}}e}ld{{Cb{}{{B`{c}}}}}}{{{j{hn}}e}ld{{Cb{}{{B`{c}}}}}}{{{j{Cd}}{j{hCf}}}Ch}{{{j{b}}{j{hCf}}}Ch}{{{j{f}}{j{hCf}}}Ch}0{{{j{n}}{j{hCf}}}Ch}{cc{}}{cbd}1{Cdb}{fb}{Cjb}{Clb}55{{cAjm}oAl{}AlAlAn{{Bj{e}{{Bb{g}}{Bd{i}}{Bf{k}}}}}Al}`>>={{}c{}}000{{{j{hn}}}{{Ah{lb}}}}{dC`}0{{{j{n}}}Aj}{{Cnc}bd}:::`{{ce}fD`Ad}{{}n}{{Afc}AfAd}0{{fc}fAd}{{{j{hb}}c}ld}{{{j{D`}}}{{Dd{Db}}}}0{{{j{D`}}}{{Df{Db}}}}`{{ce}fDhAd}{jDj}{{{j{d}}}C`}0{{{j{d}}{j{hC`}}}l}{{{j{Cd}}{j{hC`}}}l}{{{j{b}}{j{hC`}}}l}{{{j{f}}{j{hC`}}}l}{c{{Df{Db}}}Dh}{c{{Dl{e}}}{}{}}000{{}{{Dl{c}}}{}}000{jDn}000??>","D":"Ij","p":[[5,"Error",0,136],[10,"ToTokensError",0,136],[5,"ErrorMessage",0,136],[0,"mut"],[1,"reference"],[1,"unit"],[5,"Emitter",0,136],[10,"Attachment",0,136],[1,"str"],[10,"Display",137],[10,"ResultExt",0,136],[8,"Result",0,136],[1,"bool"],[10,"AnyTokenStream",0],[10,"MacroOutput",0],[17,"Item"],[17,"Input"],[17,"Dummy"],[17,"Output"],[10,"AttributeMacroHandler",0],[10,"FunctionMacroHandler",0],[10,"DeriveMacroHandler",0],[10,"FnOnce",138],[5,"TokenStream",139],[10,"IntoIterator",140],[5,"SilentError",0,136],[5,"Formatter",137],[8,"Result",137],[5,"Error",141],[5,"Error",141],[10,"JoinToTokensError",0,136],[10,"SpanRanged",0,142],[5,"Span",139],[6,"Option",143],[5,"Range",144],[10,"ToTokens",145],[5,"String",146],[6,"Result",147],[5,"TypeId",148]],"r":[[1,136],[7,136],[9,136],[10,136],[16,136],[22,136],[23,136],[24,136],[25,142],[26,136],[101,149],[120,142]],"b":[[34,"impl-ErrorMessage"],[35,"impl-Attachment-for-ErrorMessage"],[72,"impl-Display-for-ErrorMessage"],[73,"impl-Debug-for-ErrorMessage"],[76,"impl-Error"],[78,"impl-From%3CSilentError%3E-for-Error"],[79,"impl-From%3CErrorMessage%3E-for-Error"],[80,"impl-From%3CError%3E-for-Error"],[81,"impl-From%3CError%3E-for-Error"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADsADwAFAAIADQADABQAAgAcAAMAIgAAACQAAAAoAAoAOAAAADoAAQBFAAYATwADAGMAAgByAAAAdgACAHoACwA="}],["manyhow_macros",{"t":"X","n":["manyhow"],"q":[[0,"manyhow_macros"]],"i":"`","f":"`","D":"b","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAAAEAAAAAAA"}],["maybe_async_cfg",{"t":"QXXXXX","n":["content","maybe","noop","only_if","remove","remove_if"],"q":[[0,"maybe_async_cfg"]],"i":"``````","f":"``````","D":"n","p":[],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],["memchr",{"t":"FFFCNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHCHHHHHHNNNNNNNNNNNNNNNNNNNNNNNNCCHHHHCCCCCFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFKFNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCCFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNCCFFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNPFFFFFPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNHNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Memchr","Memchr2","Memchr3","arch","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","count","fmt","","","from","","","into","","","into_iter","","","memchr","memchr2","memchr2_iter","memchr3","memchr3_iter","memchr_iter","memmem","memrchr","memrchr2","memrchr2_iter","memrchr3","memrchr3_iter","memrchr_iter","new","","","next","","","next_back","","","size_hint","","","to_owned","","","try_from","","","try_into","","","type_id","","","all","x86_64","is_equal","is_equal_raw","is_prefix","is_suffix","memchr","packedpair","rabinkarp","shiftor","twoway","One","OneIter","Three","ThreeIter","Two","TwoIter","borrow","","","","","","borrow_mut","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","count","","count_raw","find","","","find_raw","","","fmt","","","","","","from","","","","","","into","","","","","","into_iter","","","iter","","","new","","","next","","","next_back","","","rfind","","","rfind_raw","","","size_hint","","","to_owned","","","","","","try_from","","","","","","try_into","","","","","","type_id","","","","","","Finder","HeuristicFrequencyRank","Pair","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","find_prefilter","fmt","","from","","index1","index2","into","","new","","pair","rank","to_owned","","try_from","","try_into","","type_id","","with_indices","with_pair","with_ranker","Finder","FinderRev","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","find","find_raw","fmt","","from","","into","","new","","rfind","rfind_raw","to_owned","","try_from","","try_into","","type_id","","Finder","borrow","borrow_mut","find","fmt","from","into","new","try_from","try_into","type_id","Finder","FinderRev","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","find","fmt","","from","","into","","new","","rfind","to_owned","","try_from","","try_into","","type_id","","avx2","sse2","memchr","packedpair","One","OneIter","Three","ThreeIter","Two","TwoIter","borrow","","","","","","borrow_mut","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","count","","count_raw","find","","","find_raw","","","fmt","","","","","","from","","","","","","into","","","","","","into_iter","","","is_available","","","iter","","","new","","","new_unchecked","","","next","","","next_back","","","rfind","","","rfind_raw","","","size_hint","","","to_owned","","","","","","try_from","","","","","","try_into","","","","","","type_id","","","","","","Finder","borrow","borrow_mut","clone","clone_into","clone_to_uninit","find","find_prefilter","fmt","from","into","is_available","min_haystack_len","new","pair","to_owned","try_from","try_into","type_id","with_pair","memchr","packedpair","One","OneIter","Three","ThreeIter","Two","TwoIter","borrow","","","","","","borrow_mut","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","count","","count_raw","find","","","find_raw","","","fmt","","","","","","from","","","","","","into","","","","","","into_iter","","","is_available","","","iter","","","new","","","new_unchecked","","","next","","","next_back","","","rfind","","","rfind_raw","","","size_hint","","","to_owned","","","","","","try_from","","","","","","try_into","","","","","","type_id","","","","","","Finder","borrow","borrow_mut","clone","clone_into","clone_to_uninit","find","find_prefilter","fmt","from","into","is_available","min_haystack_len","new","pair","to_owned","try_from","try_into","type_id","with_pair","Auto","FindIter","FindRevIter","Finder","FinderBuilder","FinderRev","None","Prefilter","as_ref","","borrow","","","","","","borrow_mut","","","","","","build_forward","build_forward_with_ranker","build_reverse","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","default","","find","","find_iter","","fmt","","","","","","from","","","","","","into","","","","","","into_iter","","into_owned","","","","needle","","new","","","next","","prefilter","rfind","","rfind_iter","","size_hint","to_owned","","","","","","try_from","","","","","","try_into","","","","","","type_id","","","","",""],"q":[[0,"memchr"],[69,"memchr::arch"],[71,"memchr::arch::all"],[80,"memchr::arch::all::memchr"],[191,"memchr::arch::all::packedpair"],[228,"memchr::arch::all::rabinkarp"],[260,"memchr::arch::all::shiftor"],[271,"memchr::arch::all::twoway"],[301,"memchr::arch::x86_64"],[303,"memchr::arch::x86_64::avx2"],[305,"memchr::arch::x86_64::avx2::memchr"],[422,"memchr::arch::x86_64::avx2::packedpair"],[442,"memchr::arch::x86_64::sse2"],[444,"memchr::arch::x86_64::sse2::memchr"],[561,"memchr::arch::x86_64::sse2::packedpair"],[581,"memchr::memmem"],[691,"memchr::memchr"],[692,"core::fmt"],[693,"core::option"],[694,"core::iter::adapters::rev"],[695,"core::result"],[696,"core::any"],[697,"core::marker"],[698,"core::convert"]],"i":"````fhj2102102102102210210210210`````````````210210210210210210210210`````````````````BdBfBhBjBlBn543210543210543210543210545531531543210543210543210420531531420420531531420543210543210543210543210```C`Cb10101010110100010101Cd21212121121``CfCh1010101011101010100010101010`Cj000000000``ClCn10101010110101010010101010``````````D`DbDdDfDhDj543210543210543210543210545531531543210543210543210420531531531531420420531531420543210543210543210543210`Dl000000000000000000````````DnE`EbEdEfEh543210543210543210543210545531531543210543210543210420531531531531420420531531420543210543210543210543210`Ej000000000000000000Ff`````0`ElEn2FhFj32F`52143000052143052143052143050`4`452143052143052143021214343430210`3`32521430521430521430521430","f":"````{b{{b{c}}}{}}00{{{b{d}}}{{b{dc}}}{}}00{{{b{f}}}f}{{{b{h}}}h}{{{b{j}}}j}{{b{b{dc}}}l{}}00{bl}00{fn}{{{b{f}}{b{dA`}}}Ab}{{{b{h}}{b{dA`}}}Ab}{{{b{j}}{b{dA`}}}Ab}{cc{}}00{{}c{}}00000{{Ad{b{{Af{Ad}}}}}{{Ah{n}}}}{{AdAd{b{{Af{Ad}}}}}{{Ah{n}}}}{{AdAd{b{{Af{Ad}}}}}h}{{AdAdAd{b{{Af{Ad}}}}}{{Ah{n}}}}{{AdAdAd{b{{Af{Ad}}}}}j}{{Ad{b{{Af{Ad}}}}}f}`54{{AdAd{b{{Af{Ad}}}}}{{Aj{h}}}}3{{AdAdAd{b{{Af{Ad}}}}}{{Aj{j}}}}{{Ad{b{{Af{Ad}}}}}{{Aj{f}}}}364{{{b{df}}}{{Ah{n}}}}{{{b{dh}}}{{Ah{n}}}}{{{b{dj}}}{{Ah{n}}}}210{{{b{f}}}{{Al{n{Ah{n}}}}}}{{{b{h}}}{{Al{n{Ah{n}}}}}}{{{b{j}}}{{Al{n{Ah{n}}}}}}{bc{}}00{c{{An{e}}}{}{}}00{{}{{An{c}}}{}}00{bB`}00``{{{b{{Af{Ad}}}}{b{{Af{Ad}}}}}Bb}{{AdAdn}Bb}11```````````{b{{b{c}}}{}}00000{{{b{d}}}{{b{dc}}}{}}00000{{{b{Bd}}}Bd}{{{b{Bf}}}Bf}{{{b{Bh}}}Bh}{{{b{Bj}}}Bj}{{{b{Bl}}}Bl}{{{b{Bn}}}Bn}{{b{b{dc}}}l{}}00000{bl}00000{{{b{Bd}}{b{{Af{Ad}}}}}n}{Bfn}{{{b{Bd}}AdAd}n}{{{b{Bd}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{Bh}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{Bl}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{Bd}}AdAd}{{Ah{Ad}}}}{{{b{Bh}}AdAd}{{Ah{Ad}}}}{{{b{Bl}}AdAd}{{Ah{Ad}}}}{{{b{Bd}}{b{dA`}}}Ab}{{{b{Bf}}{b{dA`}}}Ab}{{{b{Bh}}{b{dA`}}}Ab}{{{b{Bj}}{b{dA`}}}Ab}{{{b{Bl}}{b{dA`}}}Ab}{{{b{Bn}}{b{dA`}}}Ab}{cc{}}00000{{}c{}}00000000{{{b{Bd}}{b{{Af{Ad}}}}}Bf}{{{b{Bh}}{b{{Af{Ad}}}}}Bj}{{{b{Bl}}{b{{Af{Ad}}}}}Bn}{AdBd}{{AdAd}Bh}{{AdAdAd}Bl}{{{b{dBf}}}{{Ah{n}}}}{{{b{dBj}}}{{Ah{n}}}}{{{b{dBn}}}{{Ah{n}}}}210{{{b{Bd}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{Bh}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{Bl}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{Bd}}AdAd}{{Ah{Ad}}}}{{{b{Bh}}AdAd}{{Ah{Ad}}}}{{{b{Bl}}AdAd}{{Ah{Ad}}}}{{{b{Bf}}}{{Al{n{Ah{n}}}}}}{{{b{Bj}}}{{Al{n{Ah{n}}}}}}{{{b{Bn}}}{{Al{n{Ah{n}}}}}}{bc{}}00000{c{{An{e}}}{}{}}00000{{}{{An{c}}}{}}00000{bB`}00000```{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{C`}}}C`}{{{b{Cb}}}Cb}{{b{b{dc}}}l{}}0{bl}0{{{b{C`}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{C`}}{b{dA`}}}Ab}{{{b{Cb}}{b{dA`}}}Ab}{cc{}}0{{{b{Cb}}}Ad}0{{}c{}}0{{{b{{Af{Ad}}}}}{{Ah{C`}}}}{{{b{{Af{Ad}}}}}{{Ah{Cb}}}}{{{b{C`}}}{{b{Cb}}}}{{{b{Cd}}Ad}Ad}{bc{}}0{c{{An{e}}}{}{}}0{{}{{An{c}}}{}}0{bB`}0{{{b{{Af{Ad}}}}AdAd}{{Ah{Cb}}}}{{{b{{Af{Ad}}}}Cb}{{Ah{C`}}}}{{{b{{Af{Ad}}}}c}{{Ah{Cb}}}Cd}``{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{Cf}}}Cf}{{{b{Ch}}}Ch}{{b{b{dc}}}l{}}0{bl}0{{{b{Cf}}{b{{Af{Ad}}}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{Cf}}AdAdAdAd}{{Ah{Ad}}}}{{{b{Cf}}{b{dA`}}}Ab}{{{b{Ch}}{b{dA`}}}Ab}{cc{}}0{{}c{}}0{{{b{{Af{Ad}}}}}Cf}{{{b{{Af{Ad}}}}}Ch}{{{b{Ch}}{b{{Af{Ad}}}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{Ch}}AdAdAdAd}{{Ah{Ad}}}}{bc{}}0{c{{An{e}}}{}{}}0{{}{{An{c}}}{}}0{bB`}0`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Cj}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{Cj}}{b{dA`}}}Ab}=<{{{b{{Af{Ad}}}}}{{Ah{Cj}}}}765``4433{{{b{Cl}}}Cl}{{{b{Cn}}}Cn}{{b{b{dc}}}l{}}0{bl}0{{{b{Cl}}{b{{Af{Ad}}}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{Cl}}{b{dA`}}}Ab}{{{b{Cn}}{b{dA`}}}Ab}{cc{}}0{{}c{}}0{{{b{{Af{Ad}}}}}Cl}{{{b{{Af{Ad}}}}}Cn}{{{b{Cn}}{b{{Af{Ad}}}}{b{{Af{Ad}}}}}{{Ah{n}}}}{bc{}}0{c{{An{e}}}{}{}}0{{}{{An{c}}}{}}0{bB`}0``````````{b{{b{c}}}{}}00000{{{b{d}}}{{b{dc}}}{}}00000{{{b{D`}}}D`}{{{b{Db}}}Db}{{{b{Dd}}}Dd}{{{b{Df}}}Df}{{{b{Dh}}}Dh}{{{b{Dj}}}Dj}{{b{b{dc}}}l{}}00000{bl}00000{{{b{D`}}{b{{Af{Ad}}}}}n}{Dbn}{{{b{D`}}AdAd}n}{{{b{D`}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{Dd}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{Dh}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{D`}}AdAd}{{Ah{Ad}}}}{{{b{Dd}}AdAd}{{Ah{Ad}}}}{{{b{Dh}}AdAd}{{Ah{Ad}}}}{{{b{D`}}{b{dA`}}}Ab}{{{b{Db}}{b{dA`}}}Ab}{{{b{Dd}}{b{dA`}}}Ab}{{{b{Df}}{b{dA`}}}Ab}{{{b{Dh}}{b{dA`}}}Ab}{{{b{Dj}}{b{dA`}}}Ab}{cc{}}00000{{}c{}}00000000{{}Bb}00{{{b{D`}}{b{{Af{Ad}}}}}Db}{{{b{Dd}}{b{{Af{Ad}}}}}Df}{{{b{Dh}}{b{{Af{Ad}}}}}Dj}{Ad{{Ah{D`}}}}{{AdAd}{{Ah{Dd}}}}{{AdAdAd}{{Ah{Dh}}}}{AdD`}{{AdAd}Dd}{{AdAdAd}Dh}{{{b{dDb}}}{{Ah{n}}}}{{{b{dDf}}}{{Ah{n}}}}{{{b{dDj}}}{{Ah{n}}}}210{{{b{D`}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{Dd}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{Dh}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{D`}}AdAd}{{Ah{Ad}}}}{{{b{Dd}}AdAd}{{Ah{Ad}}}}{{{b{Dh}}AdAd}{{Ah{Ad}}}}{{{b{Db}}}{{Al{n{Ah{n}}}}}}{{{b{Df}}}{{Al{n{Ah{n}}}}}}{{{b{Dj}}}{{Al{n{Ah{n}}}}}}{bc{}}00000{c{{An{e}}}{}{}}00000{{}{{An{c}}}{}}00000{bB`}00000`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Dl}}}Dl}{{b{b{dc}}}l{}}{bl}{{{b{Dl}}{b{{Af{Ad}}}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{Dl}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{Dl}}{b{dA`}}}Ab}{cc{}}{{}c{}}{{}Bb}{{{b{Dl}}}n}{{{b{{Af{Ad}}}}}{{Ah{Dl}}}}{{{b{Dl}}}{{b{Cb}}}}{bc{}}{c{{An{e}}}{}{}}{{}{{An{c}}}{}}{bB`}{{{b{{Af{Ad}}}}Cb}{{Ah{Dl}}}}````````{b{{b{c}}}{}}00000{{{b{d}}}{{b{dc}}}{}}00000{{{b{Dn}}}Dn}{{{b{E`}}}E`}{{{b{Eb}}}Eb}{{{b{Ed}}}Ed}{{{b{Ef}}}Ef}{{{b{Eh}}}Eh}{{b{b{dc}}}l{}}00000{bl}00000{{{b{Dn}}{b{{Af{Ad}}}}}n}{E`n}{{{b{Dn}}AdAd}n}{{{b{Dn}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{Eb}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{Ef}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{Dn}}AdAd}{{Ah{Ad}}}}{{{b{Eb}}AdAd}{{Ah{Ad}}}}{{{b{Ef}}AdAd}{{Ah{Ad}}}}{{{b{Dn}}{b{dA`}}}Ab}{{{b{E`}}{b{dA`}}}Ab}{{{b{Eb}}{b{dA`}}}Ab}{{{b{Ed}}{b{dA`}}}Ab}{{{b{Ef}}{b{dA`}}}Ab}{{{b{Eh}}{b{dA`}}}Ab}{cc{}}00000{{}c{}}00000000{{}Bb}00{{{b{Dn}}{b{{Af{Ad}}}}}E`}{{{b{Eb}}{b{{Af{Ad}}}}}Ed}{{{b{Ef}}{b{{Af{Ad}}}}}Eh}{Ad{{Ah{Dn}}}}{{AdAd}{{Ah{Eb}}}}{{AdAdAd}{{Ah{Ef}}}}{AdDn}{{AdAd}Eb}{{AdAdAd}Ef}{{{b{dE`}}}{{Ah{n}}}}{{{b{dEd}}}{{Ah{n}}}}{{{b{dEh}}}{{Ah{n}}}}210{{{b{Dn}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{Eb}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{Ef}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{Dn}}AdAd}{{Ah{Ad}}}}{{{b{Eb}}AdAd}{{Ah{Ad}}}}{{{b{Ef}}AdAd}{{Ah{Ad}}}}{{{b{E`}}}{{Al{n{Ah{n}}}}}}{{{b{Ed}}}{{Al{n{Ah{n}}}}}}{{{b{Eh}}}{{Al{n{Ah{n}}}}}}{bc{}}00000{c{{An{e}}}{}{}}00000{{}{{An{c}}}{}}00000{bB`}00000`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Ej}}}Ej}{{b{b{dc}}}l{}}{bl}{{{b{Ej}}{b{{Af{Ad}}}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{Ej}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{Ej}}{b{dA`}}}Ab}{cc{}}{{}c{}}{{}Bb}{{{b{Ej}}}n}{{{b{{Af{Ad}}}}}{{Ah{Ej}}}}{{{b{Ej}}}{{b{Cb}}}}{bc{}}{c{{An{e}}}{}{}}{{}{{An{c}}}{}}{bB`}{{{b{{Af{Ad}}}}Cb}{{Ah{Ej}}}}````````{{{b{El}}}El}{{{b{En}}}En}{b{{b{c}}}{}}00000{{{b{d}}}{{b{dc}}}{}}00000{{{b{F`}}{b{c}}}El{Fb{Fd{{Af{Ad}}}}}}{{{b{F`}}c{b{e}}}ElCd{Fb{Fd{{Af{Ad}}}}}}{{{b{F`}}{b{c}}}En{Fb{Fd{{Af{Ad}}}}}}{{{b{Ff}}}Ff}{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}98{{{b{F`}}}F`}{{b{b{dc}}}l{}}00000{bl}00000{{}Ff}{{}F`}{{{b{{Af{Ad}}}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{El}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{{Af{Ad}}}}{b{c}}}Fh{Fb{Fd{{Af{Ad}}}}}}{{{b{El}}{b{{Af{Ad}}}}}Fh}{{{b{Ff}}{b{dA`}}}Ab}{{{b{Fh}}{b{dA`}}}Ab}{{{b{Fj}}{b{dA`}}}Ab}{{{b{El}}{b{dA`}}}Ab}{{{b{En}}{b{dA`}}}Ab}{{{b{F`}}{b{dA`}}}Ab}{cc{}}00000{{}c{}}0000000{FhFh}{FjFj}{ElEl}{EnEn}{{{b{El}}}{{b{{Af{Ad}}}}}}{{{b{En}}}{{b{{Af{Ad}}}}}}{{{b{c}}}El{Fb{Fd{{Af{Ad}}}}}}{{{b{c}}}En{Fb{Fd{{Af{Ad}}}}}}{{}F`}{{{b{dFh}}}{{Ah{n}}}}{{{b{dFj}}}{{Ah{n}}}}{{{b{dF`}}Ff}{{b{dF`}}}}{{{b{{Af{Ad}}}}{b{{Af{Ad}}}}}{{Ah{n}}}}{{{b{En}}c}{{Ah{n}}}{{Fd{{Af{Ad}}}}}}{{{b{{Af{Ad}}}}{b{c}}}Fj{Fb{Fd{{Af{Ad}}}}}}{{{b{En}}{b{{Af{Ad}}}}}Fj}{{{b{Fh}}}{{Al{n{Ah{n}}}}}}{bc{}}00000{c{{An{e}}}{}{}}00000{{}{{An{c}}}{}}00000{bB`}00000","D":"BBj","p":[[1,"reference"],[0,"mut"],[5,"Memchr",0,691],[5,"Memchr2",0,691],[5,"Memchr3",0,691],[1,"unit"],[1,"usize"],[5,"Formatter",692],[8,"Result",692],[1,"u8"],[1,"slice"],[6,"Option",693],[5,"Rev",694],[1,"tuple"],[6,"Result",695],[5,"TypeId",696],[1,"bool"],[5,"One",80],[5,"OneIter",80],[5,"Two",80],[5,"TwoIter",80],[5,"Three",80],[5,"ThreeIter",80],[5,"Finder",191],[5,"Pair",191],[10,"HeuristicFrequencyRank",191],[5,"Finder",228],[5,"FinderRev",228],[5,"Finder",260],[5,"Finder",271],[5,"FinderRev",271],[5,"One",305],[5,"OneIter",305],[5,"Two",305],[5,"TwoIter",305],[5,"Three",305],[5,"ThreeIter",305],[5,"Finder",422],[5,"One",444],[5,"OneIter",444],[5,"Two",444],[5,"TwoIter",444],[5,"Three",444],[5,"ThreeIter",444],[5,"Finder",561],[5,"Finder",581],[5,"FinderRev",581],[5,"FinderBuilder",581],[10,"Sized",697],[10,"AsRef",698],[6,"Prefilter",581],[5,"FindIter",581],[5,"FindRevIter",581]],"r":[[0,691],[1,691],[2,691],[32,691],[33,691],[34,691],[35,691],[36,691],[37,691],[39,691],[40,691],[41,691],[42,691],[43,691],[44,691]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJ4BLQAFABIAHgACADEAFABXAB0AdgAAAH4ABQCQAAIAmQAFAKUAGgDDAAkAzgABANoABwDnAAkA8wABAP0ABwAGAQEACQEAAA0BAgASAQkAHQEBACYBBwA4AR0AVwEAAF8BBQBxAQIAgAEFAIwBGgCoAQQArwEAALYBAwDDAR0A4gEAAOoBBQD8AQIACwIFABcCGgAzAgQAOgIAAEECAwBQAgsAXwITAHcCBQCJAgEAlAIBAJsCGAA="}],["mmc5983_rs",{"t":"GPPGPPPPPPPPPPPPPPPPPPPPPGGFFPFGFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNCNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOORRFKFKNNNNNNNNNNMNNMNNNNNNNNMNNGGNNNNNNNNNNNNNNNNTTTTTTTTTTTTFFFFTRTTTTGTKKTTTTTGTTGFTGGTGGGGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["BandwidthMode","Comm","Continuous","Error","Every1","Every100","Every1000","Every2000","Every25","Every250","Every500","Every75","Hz1","Hz10","Hz100","","Hz1000","Hz20","Hz200","","Hz400","Hz50","Hz800","InvalidId","InvalidInputData","MagMode","MagOutputDataRate","MagneticField","Mmc5983","OneShot","ProductId","SetResetPeriod","Status","Temperature","borrow","","","","","","","","","","borrow_mut","","","","","","","","","","calibrate_offset","clone","","","","","","","","clone_to_uninit","","","","","","","","default","","degrees_celsius","destroy","","disable_auto_set_reset","enable_auto_set_reset","eq","","","","","","","","fmt","","","","","","","","","","from","","","","","","","","","","","","from_data","","gauss","get_calibrated_field","get_mode_config","init","interface","into","","","","","","","","","","into_continuous","into_oneshot","is_correct","magnetic_field","","meas_done","mode","new_with_i2c","new_with_spi","otp_read_done","product_id","raw","","read_magnetic_field","register_address","reset","reset_extra","set","set_bandwidth","set_extra","set_frequency","status","temp_done","temperature","try_from","","","","","","","","","","try_into","","","","","","","","","","type_id","","","","","","","","","","x_gauss","x_raw","y_gauss","y_raw","z_gauss","z_raw","frequency","set_period","Error","","I2cInterface","ReadData","SpiInterface","WriteData","borrow","","borrow_mut","","fmt","","from","","into","","read_consecutive","","","read_register","","","try_from","","try_into","","type_id","","write_register","","","Continuous","OneShot","borrow","","borrow_mut","","fmt","","from","","into","","try_from","","try_into","","type_id","","ADDR","AUTO_SR","BW","BW0","BW1","CMM_EN","CM_FREQ","CM_FREQ0","CM_FREQ1","CM_FREQ2","EN_PRD_SET","INT_MEAS_DONE_EN","InternalControl0","InternalControl1","InternalControl2","InternalControl3","OTP_READ","Output","PRD_SET","PRD_SET0","PRD_SET1","PRD_SET2","ProductId1","RESET","RegRead","RegWrite","SET","SPI_3W","ST_ENM","ST_ENP","SW_RST","Status","TM_M","TM_T","Tout","XYZout2","X_INHIBIT","Xout0","Xout1","YZ_INHIBIT","Yout0","Yout1","Zout0","Zout1","all","","","","bitand","","","","bitand_assign","","","","bitor","","","","bitor_assign","","","","bits","","","","","","","","bitxor","","","","bitxor_assign","","","","borrow","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","clone","","","","","clone_to_uninit","","","","","complement","","","","contains","","","","data","","","","","default","","","","difference","","","","empty","","","","extend","","","","fmt","","","","","","","","","","","","","","","","","","","","","from","","","","","","","","","","","","","","from_bits","","","","from_bits_retain","","","","","","","","from_bits_truncate","","","","from_data","","","","","","","","","","","","","","","from_iter","","","","from_name","","","","insert","","","","intersection","","","","intersects","","","","into","","","","","","","","","","","","","","into_iter","","","","is_all","","","","is_empty","","","","iter","","","","iter_names","","","","not","","","","output_rate","remove","","","","set","","","","set_period","sub","","","","sub_assign","","","","symmetric_difference","","","","toggle","","","","try_from","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","type_id","","","","","","","","","","","","","","union","","","","with_bandwidth","with_output_rate","with_set_period","x_bits","y_bits","z_bits"],"q":[[0,"mmc5983_rs"],[185,"mmc5983_rs::MagMode"],[187,"mmc5983_rs::interface"],[218,"mmc5983_rs::mode"],[236,"mmc5983_rs::register_address"],[585,"mmc5983_rs::types"],[586,"core::result"],[587,"embedded_hal::delay"],[588,"mmc5983_rs::types::mode"],[589,"core::fmt"],[590,"core::option"],[591,"nb"],[592,"core::any"],[593,"embedded_hal::i2c"],[594,"embedded_hal::spi"],[595,"core::iter::traits::collect"],[596,"bitflags::iter"]],"i":"`jAj`An0000000Al0Ah1110101044````3````4Afh2534B`Bbf9435867210043586721435867213210000435867219435867210999435867210313000`9435867210004002`0020410`000000020943586721094358672109435867210333333Fb0AbA`````BhBj10101010210210101010310``CnBl10101010101010FdDnE`00Eb000002````230000`2``2Ed002`33``2``2````321032103210321032103322110032103210FfFhFjFlFnG`EfGbGd<;:9Gf987654321=<;:03=<;:3=<;:=<;:=<;:Dl>=<;>=<;>=<;>=<;>=<;4>>>>>=====<<<<<;;;;;:98765432>=<;1>=<;>>==<<;;>=<;?:98765432>=<;1>=<;>=<;>=<;>=<;>=<;:98765432>=<;1>=<;>=<;>=<;>=<;>=<;>=<;<>=<;>=<;<>=<;>=<;>=<;>=<;:98765432>=<;1:98765432>=<;1:98765432>=<;1>=<;=<<444","f":"``````````````````````````````````{b{{b{c}}}{}}000000000{{{b{d}}}{{b{dc}}}{}}000000000{{{b{d{f{eg}}}}{b{di}}}{{l{h{j{c}}}}}{}{{A`{}{{n{{j{c}}}}}}{Ab{}{{n{{j{c}}}}}}}{}Ad}{{{b{Af}}}Af}{{{b{h}}}h}{{{b{Ah}}}Ah}{{{b{Aj}}}Aj}{{{b{Al}}}Al}{{{b{An}}}An}{{{b{B`}}}B`}{{{b{Bb}}}Bb}{bBd}0000000{{}h}{{}B`}{{{b{Bb}}}Bf}{{{f{{Bh{c}}e}}}c{}{}}{{{f{{Bj{c}}e}}}c{}{}}{{{b{d{f{eBl}}}}}{{l{Bd{j{c}}}}}{}{{A`{}{{n{{j{c}}}}}}{Ab{}{{n{{j{c}}}}}}}}{{{b{d{f{eBl}}}}An}{{l{Bd{j{c}}}}}{}{{A`{}{{n{{j{c}}}}}}{Ab{}{{n{{j{c}}}}}}}}{{{b{Af}}{b{Af}}}Bn}{{{b{h}}{b{h}}}Bn}{{{b{Ah}}{b{Ah}}}Bn}{{{b{Aj}}{b{Aj}}}Bn}{{{b{Al}}{b{Al}}}Bn}{{{b{An}}{b{An}}}Bn}{{{b{B`}}{b{B`}}}Bn}{{{b{Bb}}{b{Bb}}}Bn}{{{b{{j{c}}}}{b{dC`}}}CbCd}{{{b{Af}}{b{dC`}}}Cb}{{{b{h}}{b{dC`}}}Cb}{{{b{Ah}}{b{dC`}}}Cb}{{{b{Aj}}{b{dC`}}}Cb}{{{b{Al}}{b{dC`}}}Cb}{{{b{An}}{b{dC`}}}Cb}{{{b{B`}}{b{dC`}}}Cb}{{{b{Bb}}{b{dC`}}}Cb}{{{b{{f{ce}}}}{b{dC`}}}CbCdCd}{c{{j{c}}}{}}{Cfc{}}{cc{}}000000000{{{Cj{ChChCh}}}c{}}{Clc{}}{{{b{h}}}{{Cj{BfBfBf}}}}{{{b{d{f{eg}}}}}{{l{h{j{c}}}}}{}{{A`{}{{n{{j{c}}}}}}{Ab{}{{n{{j{c}}}}}}}{}}{{{b{{f{eBl}}}}}Aj{}{{A`{}{{n{{j{c}}}}}}{Ab{}{{n{{j{c}}}}}}}}{{{b{d{f{eg}}}}}{{l{Bd{j{c}}}}}{}{{A`{}{{n{{j{c}}}}}}{Ab{}{{n{{j{c}}}}}}}{}}`{{}c{}}000000000{{{f{eCn}}Al{D`{An}}}{{l{{f{eBl}}{j{c}}}}}{}{{A`{}{{n{{j{c}}}}}}{Ab{}{{n{{j{c}}}}}}}}{{{f{eBl}}}{{l{{f{eCn}}{j{c}}}}}{}{{A`{}{{n{{j{c}}}}}}{Ab{}{{n{{j{c}}}}}}}}{{{b{Af}}}Bn}{{{b{d{f{eBl}}}}}{{l{h{j{c}}}}}{}{{A`{}{{n{{j{c}}}}}}{Ab{}{{n{{j{c}}}}}}}}{{{b{d{f{eCn}}}}}{{Db{h{j{c}}}}}{}{{A`{}{{n{{j{c}}}}}}{Ab{}{{n{{j{c}}}}}}}}{{{b{B`}}}Bn}`{c{{f{{Bh{c}}Cn}}}{}}{c{{f{{Bj{c}}Cn}}}{}}2{{{b{d{f{eg}}}}}{{l{Af{j{c}}}}}{}{{A`{}{{n{{j{c}}}}}}{Ab{}{{n{{j{c}}}}}}}{}}{{{b{Af}}}Cl}{{{b{Bb}}}Cl}>`{{{b{d{f{eg}}}}{b{di}}}{{l{Bd{j{c}}}}}{}{{A`{}{{n{{j{c}}}}}}{Ab{}{{n{{j{c}}}}}}}{}Ad}00{{{b{d{f{eg}}}}Ah}{{l{Bd{j{c}}}}}{}{{A`{}{{n{{j{c}}}}}}{Ab{}{{n{{j{c}}}}}}}{}}1{{{b{d{f{eBl}}}}Al}{{l{Bd{j{c}}}}}{}{{A`{}{{n{{j{c}}}}}}{Ab{}{{n{{j{c}}}}}}}}{{{b{d{f{eg}}}}}{{l{B`{j{c}}}}}{}{{A`{}{{n{{j{c}}}}}}{Ab{}{{n{{j{c}}}}}}}{}}9{{{b{d{f{eg}}}}}{{l{Bb{j{c}}}}}{}{{A`{}{{n{{j{c}}}}}}{Ab{}{{n{{j{c}}}}}}}{}}{c{{l{e}}}{}{}}000000000{{}{{l{c}}}{}}000000000{bDd}000000000{{{b{h}}}Bf}{{{b{h}}}Ch}1010````````{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{{Bh{c}}}}{b{dC`}}}CbCd}{{{b{{Bj{c}}}}{b{dC`}}}CbCd}{cc{}}0{{}c{}}0{{{b{d{A`{}{{n{c}}}}}}Cl{b{d{Df{Cl}}}}}{{l{Bdc}}}{}}{{{b{d{Bh{e}}}}Cl{b{d{Df{Cl}}}}}{{l{Bdg}}}{}{{Dh{}{{n{c}}}}}{}}{{{b{d{Bj{e}}}}Cl{b{d{Df{Cl}}}}}{{l{Bdg}}}{}{{Dj{Cl}{{n{c}}}}}{}}{{{b{d{A`{}{{n{c}}}}}}}{{l{c}}}{}}{{{b{d{Bh{e}}}}}{{l{g}}}{}{{Dh{}{{n{c}}}}}{}}{{{b{d{Bj{e}}}}}{{l{g}}}{}{{Dj{Cl}{{n{c}}}}}{}}{c{{l{e}}}{}{}}0{{}{{l{c}}}{}}0{bDd}0{{{b{d{Ab{}{{n{c}}}}}}e}{{l{Bdc}}}{}Dl}{{{b{d{Bh{e}}}}g}{{l{Bdi}}}{}{{Dh{}{{n{c}}}}}Dl{}}{{{b{d{Bj{e}}}}g}{{l{Bdi}}}{}{{Dj{Cl}{{n{c}}}}}Dl{}}``{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{Cn}}{b{dC`}}}Cb}{{{b{Bl}}{b{dC`}}}Cb}{cc{}}0{{}c{}}0;;::99````````````````````````````````````````````{{}Dn}{{}E`}{{}Eb}{{}Ed}{{DnDn}Dn}{{E`E`}E`}{{EbEb}Eb}{{EdEd}Ed}{{{b{dDn}}Dn}Bd}{{{b{dE`}}E`}Bd}{{{b{dEb}}Eb}Bd}{{{b{dEd}}Ed}Bd}76543210{{{b{Dn}}}Cl}0{{{b{E`}}}Cl}0{{{b{Eb}}}Cl}0{{{b{Ed}}}Cl}0;:987654{b{{b{c}}}{}}0000000000000{{{b{d}}}{{b{dc}}}{}}0000000000000{{{b{Ef}}}Ef}{{{b{Dn}}}Dn}{{{b{E`}}}E`}{{{b{Eb}}}Eb}{{{b{Ed}}}Ed}{bBd}0000{DnDn}{E`E`}{EbEb}{EdEd}{{{b{Dn}}Dn}Bn}{{{b{E`}}E`}Bn}{{{b{Eb}}Eb}Bn}{{{b{Ed}}Ed}Bn}{{{b{Dl}}}c{}}{{{b{Dn}}}Cl}{{{b{E`}}}Cl}{{{b{Eb}}}Cl}{{{b{Ed}}}Cl}{{}Dn}{{}E`}{{}Eb}{{}Ed}{{DnDn}Dn}{{E`E`}E`}{{EbEb}Eb}{{EdEd}Ed}7654{{{b{dDn}}c}Bd{{Ej{}{{Eh{Dn}}}}}}{{{b{dE`}}c}Bd{{Ej{}{{Eh{E`}}}}}}{{{b{dEb}}c}Bd{{Ej{}{{Eh{Eb}}}}}}{{{b{dEd}}c}Bd{{Ej{}{{Eh{Ed}}}}}}{{{b{Ef}}{b{dC`}}}Cb}{{{b{Dn}}{b{dC`}}}Cb}0000{{{b{E`}}{b{dC`}}}Cb}0000{{{b{Eb}}{b{dC`}}}Cb}0000{{{b{Ed}}{b{dC`}}}Cb}0000{cc{}}0000000000000{Cl{{D`{Dn}}}}{Cl{{D`{E`}}}}{Cl{{D`{Eb}}}}{Cl{{D`{Ed}}}}{ClDn}0{ClE`}0{ClEb}0{ClEd}03210{ce{}{}}{Clc{}}0000000000000{cDn{{Ej{}{{Eh{Dn}}}}}}{cE`{{Ej{}{{Eh{E`}}}}}}{cEb{{Ej{}{{Eh{Eb}}}}}}{cEd{{Ej{}{{Eh{Ed}}}}}}{{{b{El}}}{{D`{Dn}}}}{{{b{El}}}{{D`{E`}}}}{{{b{El}}}{{D`{Eb}}}}{{{b{El}}}{{D`{Ed}}}}{{{b{dDn}}Dn}Bd}{{{b{dE`}}E`}Bd}{{{b{dEb}}Eb}Bd}{{{b{dEd}}Ed}Bd}{{DnDn}Dn}{{E`E`}E`}{{EbEb}Eb}{{EdEd}Ed}{{{b{Dn}}Dn}Bn}{{{b{E`}}E`}Bn}{{{b{Eb}}Eb}Bn}{{{b{Ed}}Ed}Bn}{{}c{}}0000000000000{Dnc{}}{E`c{}}{Ebc{}}{Edc{}}{{{b{Dn}}}Bn}{{{b{E`}}}Bn}{{{b{Eb}}}Bn}{{{b{Ed}}}Bn}3210{{{b{Dn}}}{{En{Dn}}}}{{{b{E`}}}{{En{E`}}}}{{{b{Eb}}}{{En{Eb}}}}{{{b{Ed}}}{{En{Ed}}}}{{{b{Dn}}}{{F`{Dn}}}}{{{b{E`}}}{{F`{E`}}}}{{{b{Eb}}}{{F`{Eb}}}}{{{b{Ed}}}{{F`{Ed}}}}{DnDn}{E`E`}{EbEb}{EdEd}{{{b{Eb}}}Al}{{{b{dDn}}Dn}Bd}{{{b{dE`}}E`}Bd}{{{b{dEb}}Eb}Bd}{{{b{dEd}}Ed}Bd}{{{b{dDn}}DnBn}Bd}{{{b{dE`}}E`Bn}Bd}{{{b{dEb}}EbBn}Bd}{{{b{dEd}}EdBn}Bd}{{{b{Eb}}}An}{{DnDn}Dn}{{E`E`}E`}{{EbEb}Eb}{{EdEd}Ed}<;:93210<;:9{c{{l{e}}}{}{}}0000000000000{{}{{l{c}}}{}}0000000000000{bDd}00000000000006543{{E`Ah}E`}{{EbAl}Eb}{{EbAn}Eb}{{{b{Ef}}}Cl}00","D":"BE`","p":[[1,"reference"],[0,"mut"],[5,"Mmc5983",0],[5,"MagneticField",0,585],[6,"Error",0,585],[6,"Result",586],[17,"Error"],[10,"ReadData",187],[10,"WriteData",187],[10,"DelayNs",587],[5,"ProductId",0,585],[6,"BandwidthMode",0,585],[6,"MagMode",0,585],[6,"MagOutputDataRate",0,585],[6,"SetResetPeriod",0,585],[5,"Status",0,585],[5,"Temperature",0,585],[1,"unit"],[1,"f32"],[5,"I2cInterface",187],[5,"SpiInterface",187],[6,"Continuous",218,588],[1,"bool"],[5,"Formatter",589],[8,"Result",589],[10,"Debug",589],[1,"never"],[1,"u32"],[1,"tuple"],[1,"u8"],[6,"OneShot",218,588],[6,"Option",590],[8,"Result",591],[5,"TypeId",592],[1,"slice"],[10,"I2c",593],[10,"SpiDevice",594],[10,"RegWrite",236],[5,"InternalControl0",236],[5,"InternalControl1",236],[5,"InternalControl2",236],[5,"InternalControl3",236],[5,"XYZout2",236],[17,"Item"],[10,"IntoIterator",595],[1,"str"],[5,"Iter",596],[5,"IterNames",596],[15,"Continuous",185],[10,"RegRead",236],[6,"Xout0",236],[6,"Xout1",236],[6,"Yout0",236],[6,"Yout1",236],[6,"Zout0",236],[6,"Zout1",236],[6,"Tout",236],[6,"Status",236],[6,"ProductId1",236]],"r":[[0,585],[3,585],[25,585],[26,585],[27,585],[30,585],[31,585],[32,585],[33,585],[131,585],[218,588],[219,588]],"b":[[74,"impl-Mmc5983%3CI2cInterface%3CI2C%3E,+MODE%3E"],[75,"impl-Mmc5983%3CSpiInterface%3CSPI%3E,+MODE%3E"],[128,"impl-Mmc5983%3CDI,+Continuous%3E"],[129,"impl-Mmc5983%3CDI,+OneShot%3E"],[300,"impl-Flags-for-InternalControl0"],[301,"impl-InternalControl0"],[302,"impl-Flags-for-InternalControl1"],[303,"impl-InternalControl1"],[304,"impl-Flags-for-InternalControl2"],[305,"impl-InternalControl2"],[306,"impl-InternalControl3"],[307,"impl-Flags-for-InternalControl3"],[384,"impl-Binary-for-InternalControl0"],[385,"impl-Octal-for-InternalControl0"],[386,"impl-LowerHex-for-InternalControl0"],[387,"impl-UpperHex-for-InternalControl0"],[388,"impl-Debug-for-InternalControl0"],[389,"impl-UpperHex-for-InternalControl1"],[390,"impl-Binary-for-InternalControl1"],[391,"impl-Octal-for-InternalControl1"],[392,"impl-Debug-for-InternalControl1"],[393,"impl-LowerHex-for-InternalControl1"],[394,"impl-Debug-for-InternalControl2"],[395,"impl-Binary-for-InternalControl2"],[396,"impl-Octal-for-InternalControl2"],[397,"impl-LowerHex-for-InternalControl2"],[398,"impl-UpperHex-for-InternalControl2"],[399,"impl-Debug-for-InternalControl3"],[400,"impl-Binary-for-InternalControl3"],[401,"impl-Octal-for-InternalControl3"],[402,"impl-LowerHex-for-InternalControl3"],[403,"impl-UpperHex-for-InternalControl3"],[422,"impl-InternalControl0"],[423,"impl-Flags-for-InternalControl0"],[424,"impl-Flags-for-InternalControl1"],[425,"impl-InternalControl1"],[426,"impl-Flags-for-InternalControl2"],[427,"impl-InternalControl2"],[428,"impl-Flags-for-InternalControl3"],[429,"impl-InternalControl3"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACEBIQAjABMAOAARAE8AEwBtAAEAcAAAAIwAAACWAB0AwgAFAM0AAQDQAAcA2QABAN0ABQDnABEA/QAFAAQBAAAHAQQADQEBABEBAAAUAQAALQEAAC8BAAAxAQAANAEAAD0BJQBrAQgAgAEUAKgBAQCrAQAArQEAALMBDgDkAQMAFgIpAEQCAgA="}],["nb",{"t":"PGPPIPQNNNNNNNNNNNNNNNNN","n":["Err","Error","Ok","Other","Result","WouldBlock","block","borrow","borrow_mut","clone","clone_to_uninit","cmp","eq","fmt","from","","","hash","into","map","partial_cmp","try_from","try_into","type_id"],"q":[[0,"nb"],[24,"core::clone"],[25,"core::cmp"],[26,"core::fmt"],[27,"core::hash"],[28,"core::ops::function"],[29,"core::option"],[30,"core::result"],[31,"core::any"]],"i":"Bl`0f`0`00000000000000000","f":"```````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{f{c}}}}}{{f{c}}}h}{bj}{{{b{{f{c}}}}{b{{f{c}}}}}ln}{{{b{{f{c}}}}{b{{f{c}}}}}A`Ab}{{{b{{f{c}}}}{b{dAd}}}AfAh}{cc{}}{Ajc{}}{c{{f{c}}}{}}{{{b{{f{c}}}}{b{de}}}jAlAn}{{}c{}}{{{f{c}}g}{{f{e}}}{}{}{{Bb{c}{{B`{e}}}}}}{{{b{{f{c}}}}{b{{f{c}}}}}{{Bd{l}}}Bf}{c{{Bh{e}}}{}{}}{{}{{Bh{c}}}{}}{bBj}","D":"Af","p":[[1,"reference"],[0,"mut"],[6,"Error",0],[10,"Clone",24],[1,"unit"],[6,"Ordering",25],[10,"Ord",25],[1,"bool"],[10,"PartialEq",25],[5,"Formatter",26],[8,"Result",26],[10,"Debug",26],[1,"never"],[10,"Hash",27],[10,"Hasher",27],[17,"Output"],[10,"FnOnce",28],[6,"Option",29],[10,"PartialOrd",25],[6,"Result",30],[5,"TypeId",31],[8,"Result",0]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA0AAwAIAAYAEAACABUAAwA="}],["proc_macro2",{"t":"PPPGFPFPPFFPPPFPGFFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNFENNNNNNNNNNNNNNN","n":["Alone","Brace","Bracket","Delimiter","Group","","Ident","","Joint","LexError","Literal","","None","Parenthesis","Punct","","Spacing","Span","TokenStream","TokenTree","as_char","borrow","","","","","","","","","","borrow_mut","","","","","","","","","","byte_character","byte_string","c_string","call_site","character","clone","","","","","","","","","clone_into","","","","","","","","","clone_to_uninit","","","","","","","","","cmp","default","delim_span","delimiter","eq","","","","extend","","extra","f32_suffixed","f32_unsuffixed","f64_suffixed","f64_unsuffixed","fmt","","","","","","","","","","","","","","","","","from","","","","","","","","","","","","","","","","","from_iter","","from_str","","hash","i128_suffixed","i128_unsuffixed","i16_suffixed","i16_unsuffixed","i32_suffixed","i32_unsuffixed","i64_suffixed","i64_unsuffixed","i8_suffixed","i8_unsuffixed","into","","","","","","","","","","into_iter","is_empty","isize_suffixed","isize_unsuffixed","join","located_at","mixed_site","new","","","","new_raw","partial_cmp","resolved_at","set_span","","","","","source_text","spacing","span","","","","","","span_close","span_open","stream","string","subspan","to_owned","","","","","","","","","to_string","","","","","","","token_stream","try_from","","","","","","","","","","try_into","","","","","","","","","","type_id","","","","","","","","","","u128_suffixed","u128_unsuffixed","u16_suffixed","u16_unsuffixed","u32_suffixed","u32_unsuffixed","u64_suffixed","u64_unsuffixed","u8_suffixed","u8_unsuffixed","unwrap","usize_suffixed","usize_unsuffixed","DelimSpan","borrow","borrow_mut","clone","clone_into","clone_to_uninit","close","fmt","from","into","join","open","to_owned","try_from","try_into","type_id","IntoIter","TokenStream","borrow","borrow_mut","clone","clone_into","clone_to_uninit","fmt","from","into","into_iter","next","size_hint","to_owned","try_from","try_into","type_id"],"q":[[0,"proc_macro2"],[239,"proc_macro2::extra"],[255,"proc_macro2::token_stream"],[272,"core::ffi::c_str"],[273,"core::cmp"],[274,"core::marker"],[275,"core::convert"],[276,"core::iter::traits::collect"],[277,"core::fmt"],[278,"proc_macro"],[279,"core::result"],[280,"core::hash"],[281,"core::option"],[282,"alloc::string"],[283,"core::ops::range"],[284,"core::any"]],"i":"AlAj0``Af`02``011`0````bCfAdAb4Ah647Anl5437286910000304372869104372869104372869101422891144`000055443772286691100544433777772869104440100000000005437286910440033342611137261036572610222004372869105472610`5437286910543728691054372869100000000000300`Bd00000000000000``Dn00000000000000","f":"````````````````````{{{d{b}}}f}{d{{d{c}}}{}}000000000{{{d{h}}}{{d{hc}}}{}}000000000{jl}{{{d{{n{j}}}}}l}{{{d{A`}}}l}{{}Ab}{fl}{{{d{Ad}}}Ad}{{{d{Ab}}}Ab}{{{d{Af}}}Af}{{{d{Ah}}}Ah}{{{d{Aj}}}Aj}{{{d{b}}}b}{{{d{Al}}}Al}{{{d{An}}}An}{{{d{l}}}l}{{d{d{hc}}}B`{}}00000000{dB`}00000000{{{d{An}}{d{An}}}Bb}{{}Ad}{{{d{Ah}}}Bd}{{{d{Ah}}}Aj}{{{d{Aj}}{d{Aj}}}Bf}{{{d{Al}}{d{Al}}}Bf}{{{d{An}}{d{An}}}Bf}{{{d{An}}{d{c}}}Bf{Bh{Bl{Bj}}}}{{{d{hAd}}c}B`{{C`{}{{Bn{Af}}}}}}{{{d{hAd}}c}B`{{C`{}{{Bn{Ad}}}}}}`{Cbl}0{Cdl}0{{{d{Cf}}{d{hCh}}}Cj}0{{{d{Ad}}{d{hCh}}}Cj}0{{{d{Ab}}{d{hCh}}}Cj}{{{d{Af}}{d{hCh}}}Cj}0{{{d{Ah}}{d{hCh}}}Cj}0{{{d{Aj}}{d{hCh}}}Cj}{{{d{b}}{d{hCh}}}Cj}0{{{d{Al}}{d{hCh}}}Cj}{{{d{An}}{d{hCh}}}Cj}0{{{d{l}}{d{hCh}}}Cj}0{cc{}}0{ClAd}{AfAd}{CnAb}3{lAf}{bAf}{AnAf}{AhAf}7777777{cAd{{C`{}{{Bn{Af}}}}}}{cAd{{C`{}{{Bn{Ad}}}}}}{{{d{Bj}}}{{D`{AdCf}}}}{{{d{Bj}}}{{D`{lCf}}}}{{{d{An}}{d{hc}}}B`Db}{Ddl}0{Dfl}0{Dhl}0{Djl}0{Dll}0{{}c{}}000000000{AdDn}{{{d{Ad}}}Bf}{E`l}0{{{d{Ab}}Ab}{{Eb{Ab}}}}{{{d{Ab}}Ab}Ab}{{}Ab}{{}Ad}{{AjAd}Ah}{{fAl}b}{{{d{Bj}}Ab}An}0{{{d{An}}{d{An}}}{{Eb{Bb}}}}6{{{d{hAf}}Ab}B`}{{{d{hAh}}Ab}B`}{{{d{hb}}Ab}B`}{{{d{hAn}}Ab}B`}{{{d{hl}}Ab}B`}{{{d{Ab}}}{{Eb{Ed}}}}{{{d{b}}}Al}{{{d{Cf}}}Ab}{{{d{Af}}}Ab}{{{d{Ah}}}Ab}{{{d{b}}}Ab}{{{d{An}}}Ab}{{{d{l}}}Ab}33{{{d{Ah}}}Ad}{{{d{Bj}}}l}{{{d{l}}c}{{Eb{Ab}}}{{Eh{Ef}}}}{dc{}}00000000{dEd}000000`{c{{D`{e}}}{}{}}000000000{{}{{D`{c}}}{}}000000000{dEj}000000000{Ell}0{Enl}0{F`l}0{Fbl}0{jl}0{AbCn}{Efl}0`{d{{d{c}}}{}}{{{d{h}}}{{d{hc}}}{}}{{{d{Bd}}}Bd}{{d{d{hc}}}B`{}}{dB`}{{{d{Bd}}}Ab}{{{d{Bd}}{d{hCh}}}Cj}{cc{}}{{}c{}}33{dc{}}{c{{D`{e}}}{}{}}{{}{{D`{c}}}{}}{dEj}``<;{{{d{Dn}}}Dn}:9{{{d{Dn}}{d{hCh}}}Cj}766{{{d{hDn}}}{{Eb{Af}}}}{{{d{Dn}}}{{Fd{Ef{Eb{Ef}}}}}}7654","D":"Nh","p":[[5,"Punct",0],[1,"reference"],[1,"char"],[0,"mut"],[1,"u8"],[5,"Literal",0],[1,"slice"],[5,"CStr",272],[5,"Span",0],[5,"TokenStream",0],[6,"TokenTree",0],[5,"Group",0],[6,"Delimiter",0],[6,"Spacing",0],[5,"Ident",0],[1,"unit"],[6,"Ordering",273],[5,"DelimSpan",239],[1,"bool"],[10,"Sized",274],[1,"str"],[10,"AsRef",275],[17,"Item"],[10,"IntoIterator",276],[1,"f32"],[1,"f64"],[5,"LexError",0],[5,"Formatter",277],[8,"Result",277],[5,"TokenStream",278],[5,"Span",278],[6,"Result",279],[10,"Hasher",280],[1,"i128"],[1,"i16"],[1,"i32"],[1,"i64"],[1,"i8"],[5,"IntoIter",255],[1,"isize"],[6,"Option",281],[5,"String",282],[1,"usize"],[10,"RangeBounds",283],[5,"TypeId",284],[1,"u128"],[1,"u16"],[1,"u32"],[1,"u64"],[1,"tuple"]],"r":[[256,0]],"b":[[79,"impl-PartialEq-for-Ident"],[80,"impl-PartialEq%3CT%3E-for-Ident"],[81,"impl-Extend%3CTokenTree%3E-for-TokenStream"],[82,"impl-Extend%3CTokenStream%3E-for-TokenStream"],[88,"impl-Display-for-LexError"],[89,"impl-Debug-for-LexError"],[90,"impl-Debug-for-TokenStream"],[91,"impl-Display-for-TokenStream"],[93,"impl-Display-for-TokenTree"],[94,"impl-Debug-for-TokenTree"],[95,"impl-Display-for-Group"],[96,"impl-Debug-for-Group"],[98,"impl-Display-for-Punct"],[99,"impl-Debug-for-Punct"],[101,"impl-Display-for-Ident"],[102,"impl-Debug-for-Ident"],[103,"impl-Display-for-Literal"],[104,"impl-Debug-for-Literal"],[107,"impl-From%3CTokenStream%3E-for-TokenStream"],[108,"impl-From%3CTokenTree%3E-for-TokenStream"],[111,"impl-From%3CLiteral%3E-for-TokenTree"],[112,"impl-From%3CPunct%3E-for-TokenTree"],[113,"impl-From%3CIdent%3E-for-TokenTree"],[114,"impl-From%3CGroup%3E-for-TokenTree"],[122,"impl-FromIterator%3CTokenTree%3E-for-TokenStream"],[123,"impl-FromIterator%3CTokenStream%3E-for-TokenStream"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAJwAEQAWABMALwAcAE4ABQBZABAAbAACAHAAAwB7AAQAlAAAAKAAAACpAAAAtAAPAMUAHQDxAAQA9wAAAPwAAwABAQYACgEGAA=="}],["proc_macro_utils",{"t":"KFKKKKKKMQQNNNNNNNNMMMMNMMMMNMMMMNNMMMMMMMMMMMNMMMMMMMMMMMMMMMMMMMMMMMMMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMMNMNNNNNN","n":["Delimited","TokenParser","TokenStream2Ext","TokenStreamExt","TokenTree2Ext","TokenTreeExt","TokenTreeLiteral","TokenTreePunct","alone","assert_expansion","assert_tokens","borrow","borrow_mut","clone","clone_into","clone_to_uninit","from","","from_str","group","","ident","","into","into_group","","into_ident","","into_iter","into_literal","","into_punct","","into_token_stream","","is_alone","is_and","is_asterix","is_at","is_braced","is_bracketed","is_caret","is_colon","is_comma","is_dollar","is_dot","is_empty","is_equals","is_exclamation","is_greater_than","is_group","","is_ident","","is_implicitly_delimited","is_joint","is_less_than","is_literal","","is_minus","is_parenthesized","is_percent","is_pipe","is_plus","is_pound","is_punct","","is_question","is_quote","is_semi","is_slash","is_string","is_tilde","literal","","new","new_generic","next","next_bool","next_braced","next_bracketed","next_expression","next_group","next_ident","next_if","next_if_each","next_if_each_alone","next_keyword","next_literal","next_macro_rules_tt","next_n","next_n_alone","next_parenthesized","next_punct","next_punctuation_group","next_string","next_tt","next_tt_and","next_tt_and_and","next_tt_and_eq","next_tt_at","next_tt_caret","next_tt_caret_eq","next_tt_colon","next_tt_comma","next_tt_dollar","next_tt_dot","next_tt_dot_dot","next_tt_dot_dot_dot","next_tt_dot_dot_eq","next_tt_eq","next_tt_eq_eq","next_tt_fat_arrow","next_tt_ge","next_tt_gt","next_tt_le","next_tt_lt","next_tt_minus","next_tt_minus_eq","next_tt_ne","next_tt_not","next_tt_or","next_tt_or_eq","next_tt_or_or","next_tt_path_sep","next_tt_percent","next_tt_percent_eq","next_tt_plus","next_tt_plus_eq","next_tt_pound","next_tt_question","next_tt_r_arrow","next_tt_semi","next_tt_shl","next_tt_shl_eq","next_tt_shr","next_tt_shr_eq","next_tt_slash","next_tt_slash_eq","next_tt_star","next_tt_star_eq","next_tt_tilde","next_type","next_until","next_until_alone","next_while","next_while_alone","parser","","parser_generic","","peek","peek_braced","peek_bracketed","peek_group","peek_ident","peek_if_each","peek_keyword","peek_literal","peek_n","peek_n_braced","peek_n_bracketed","peek_n_group","peek_n_ident","peek_n_if_each","peek_n_if_each_alone","peek_n_keyword","peek_n_literal","peek_n_parenthesized","peek_n_punct","peek_n_tt","peek_n_tt_and","peek_n_tt_and_and","peek_n_tt_and_eq","peek_n_tt_at","peek_n_tt_caret","peek_n_tt_caret_eq","peek_n_tt_colon","peek_n_tt_comma","peek_n_tt_dollar","peek_n_tt_dot","peek_n_tt_dot_dot","peek_n_tt_dot_dot_dot","peek_n_tt_dot_dot_eq","peek_n_tt_eq","peek_n_tt_eq_eq","peek_n_tt_fat_arrow","peek_n_tt_ge","peek_n_tt_gt","peek_n_tt_le","peek_n_tt_lt","peek_n_tt_minus","peek_n_tt_minus_eq","peek_n_tt_ne","peek_n_tt_not","peek_n_tt_or","peek_n_tt_or_eq","peek_n_tt_or_or","peek_n_tt_path_sep","peek_n_tt_percent","peek_n_tt_percent_eq","peek_n_tt_plus","peek_n_tt_plus_eq","peek_n_tt_pound","peek_n_tt_question","peek_n_tt_r_arrow","peek_n_tt_semi","peek_n_tt_shl","peek_n_tt_shl_eq","peek_n_tt_shr","peek_n_tt_shr_eq","peek_n_tt_slash","peek_n_tt_slash_eq","peek_n_tt_star","peek_n_tt_star_eq","peek_n_tt_tilde","peek_parenthesized","peek_punct","peek_range","peek_range_alone","peek_tt","peek_tt_and","peek_tt_and_and","peek_tt_and_eq","peek_tt_at","peek_tt_caret","peek_tt_caret_eq","peek_tt_colon","peek_tt_comma","peek_tt_dollar","peek_tt_dot","peek_tt_dot_dot","peek_tt_dot_dot_dot","peek_tt_dot_dot_eq","peek_tt_eq","peek_tt_eq_eq","peek_tt_fat_arrow","peek_tt_ge","peek_tt_gt","peek_tt_le","peek_tt_lt","peek_tt_minus","peek_tt_minus_eq","peek_tt_ne","peek_tt_not","peek_tt_or","peek_tt_or_eq","peek_tt_or_or","peek_tt_path_sep","peek_tt_percent","peek_tt_percent_eq","peek_tt_plus","peek_tt_plus_eq","peek_tt_pound","peek_tt_question","peek_tt_r_arrow","peek_tt_semi","peek_tt_shl","peek_tt_shl_eq","peek_tt_shr","peek_tt_shr_eq","peek_tt_slash","peek_tt_slash_eq","peek_tt_star","peek_tt_star_eq","peek_tt_tilde","punct","","push","","span","string","to_owned","to_token_stream","to_tokens","try_from","try_into","type_id"],"q":[[0,"proc_macro_utils"],[278,"proc_macro_utils::parser"],[279,"core::clone"],[280,"proc_macro2"],[281,"core::iter::traits::iterator"],[282,"core::iter::traits::collect"],[283,"core::result"],[284,"proc_macro_utils::token_tree_ext"],[285,"proc_macro"],[286,"core::option"],[287,"proc_macro_utils::token_tree2_ext"],[288,"core::ops::function"],[289,"core::marker"],[290,"alloc::string"],[291,"proc_macro_utils::token_stream_ext"],[292,"proc_macro2::token_stream"],[293,"proc_macro_utils::token_stream2_ext"],[294,"core::ops::range"],[295,"core::any"]],"i":"````````b``h0000000AlBb102101021010223333Cf0444443444212104421404444214444Ch532444444444444444444444444444444444444444444444444444444444444444444444444DfDj106666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666666541062666666","f":"````````{bb}``{d{{d{c}}}{}}{{{d{f}}}{{d{fc}}}{}}{{{d{{h{c}}}}}{{h{c}}}{j{A`{}{{l{n}}}}}}{{d{d{fc}}}Ab{}}{dAb}{cc{}}{e{{h{c}}}{{A`{}{{l{n}}}}}{{Af{}{{l{n}}{Ad{c}}}}}}{{{d{Ah}}}{{Aj{hc}}}{}}{{{d{Al}}}{{B`{{d{An}}}}}}{{{d{Bb}}}{{B`{{d{Bd}}}}}}{{{d{Al}}}{{B`{{d{Bf}}}}}}{{{d{Bb}}}{{B`{{d{Bh}}}}}}{{}c{}}{Al{{B`{An}}}}{Bb{{B`{Bd}}}}{Al{{B`{Bf}}}}{Bb{{B`{Bh}}}}4{Al{{B`{Bj}}}}{Bb{{B`{Bl}}}}{Al{{B`{Bn}}}}{Bb{{B`{C`}}}}{{{h{c}}}Cb{{A`{}{{l{n}}}}}}{{{h{c}}}Cb{j{A`{}{{l{n}}}}}}{{{d{b}}}Cd}000{{{d{Cf}}}Cd}011111{{{d{f{h{c}}}}}Cd{{A`{}{{l{n}}}}}}222{{{d{Al}}}Cd}{{{d{Bb}}}Cd}1034410434444104444{{{d{Ch}}}Cd}5{{{d{Al}}}{{B`{{d{Bj}}}}}}{{{d{Bb}}}{{B`{{d{Bl}}}}}}{e{{h{c}}}{{A`{}{{l{n}}}}}{{Af{}{{l{n}}{Ad{c}}}}}}0{{{d{f{h{c}}}}}{{B`{e}}}{{A`{}{{l{n}}}}}{}}{{{d{f{h{c}}}}}{{B`{Cd}}}{{A`{}{{l{n}}}}}}{{{d{f{h{c}}}}}{{B`{Bd}}}{{A`{}{{l{n}}}}}}0{{{d{f{h{c}}}}}{{B`{Cb}}}{{A`{}{{l{n}}}}}}1{{{d{f{h{c}}}}}{{B`{Bh}}}{{A`{}{{l{n}}}}}}{{{d{f{h{c}}}}e}{{B`{n}}}{{A`{}{{l{n}}}}}{{Cl{{d{n}}}{{Cj{Cd}}}}}}{{{d{f{h{c}}}}e}{{B`{Cb}}}{{A`{}{{l{n}}}}}`}0{{{d{f{h{c}}}}{d{e}}}{{B`{Bh}}}{{A`{}{{l{n}}}}}Cn}{{{d{f{h{c}}}}}{{B`{Bl}}}{{A`{}{{l{n}}}}}}5{{{d{f{h{c}}}}D`}{{B`{Cb}}}{{A`{}{{l{n}}}}}}07{{{d{f{h{c}}}}}{{B`{C`}}}{{A`{}{{l{n}}}}}}7{{{d{f{h{c}}}}}{{B`{Db}}}{{A`{}{{l{n}}}}}}88888888888888888888888888888888888888888888888{{{d{f{h{c}}}}e}{{B`{Cb}}}{{A`{}{{l{n}}}}}{{Dd{{d{n}}}{{Cj{Cd}}}}}}000{Df{{h{Dh}}}}{Dj{{h{Dh}}}}10{{{d{f{h{c}}}}}{{B`{{d{n}}}}}{{A`{}{{l{n}}}}}}{{{d{f{h{c}}}}}{{B`{{d{Bd}}}}}{{A`{}{{l{n}}}}}}00{{{d{f{h{c}}}}}{{B`{{d{Bh}}}}}{{A`{}{{l{n}}}}}};{{{d{f{h{c}}}}{d{e}}}{{B`{{d{Bh}}}}}{{A`{}{{l{n}}}}}Cn}{{{d{f{h{c}}}}}{{B`{{d{Bl}}}}}{{A`{}{{l{n}}}}}}{{{d{f{h{c}}}}D`}{{B`{{d{n}}}}}{{A`{}{{l{n}}}}}}{{{d{f{h{c}}}}D`}{{B`{{d{Bd}}}}}{{A`{}{{l{n}}}}}}00{{{d{f{h{c}}}}D`}{{B`{{d{Bh}}}}}{{A`{}{{l{n}}}}}}{{{d{f{h{c}}}}D`e}{{B`{Cb}}}{{A`{}{{l{n}}}}}`}0{{{d{f{h{c}}}}D`{d{e}}}{{B`{{d{Bh}}}}}{{A`{}{{l{n}}}}}Cn}{{{d{f{h{c}}}}D`}{{B`{{d{Bl}}}}}{{A`{}{{l{n}}}}}}4{{{d{f{h{c}}}}D`}{{B`{{d{C`}}}}}{{A`{}{{l{n}}}}}}{{{d{f{h{c}}}}D`}{{B`{Cb}}}{{A`{}{{l{n}}}}}}000000000000000000000000000000000000000000000;{{{d{f{h{c}}}}}{{B`{{d{C`}}}}}{{A`{}{{l{n}}}}}}{{{d{f{h{c}}}}e}{{B`{Cb}}}{{A`{}{{l{n}}}}}{{Dl{D`}}}}0{{{d{f{h{c}}}}}{{B`{Cb}}}{{A`{}{{l{n}}}}}}000000000000000000000000000000000000000000000{{{d{Al}}}{{B`{{d{Bn}}}}}}{{{d{Bb}}}{{B`{{d{C`}}}}}}{{{d{fDf}}Dn}Ab}{{{d{fDj}}n}Ab}{{{d{f{h{c}}}}}E`{{A`{}{{l{n}}}}}}{{{d{Ch}}}{{B`{Db}}}}{dc{}}{{{d{{h{c}}}}}Cb{j{A`{}{{l{n}}}}}}{{{d{{h{c}}}}{d{fCb}}}Ab{j{A`{}{{l{n}}}}}}{c{{Aj{e}}}{}{}}{{}{{Aj{c}}}{}}{dEb}","D":"B@n","p":[[10,"TokenTreePunct",0],[1,"reference"],[0,"mut"],[5,"TokenParser",0,278],[10,"Clone",279],[17,"Item"],[6,"TokenTree",280],[10,"Iterator",281],[1,"unit"],[17,"IntoIter"],[10,"IntoIterator",282],[1,"str"],[6,"Result",283],[10,"TokenTreeExt",0,284],[5,"Group",285],[6,"Option",286],[10,"TokenTree2Ext",0,287],[5,"Group",280],[5,"Ident",285],[5,"Ident",280],[5,"Literal",285],[5,"Literal",280],[5,"Punct",285],[5,"Punct",280],[5,"TokenStream",280],[1,"bool"],[10,"Delimited",0],[10,"TokenTreeLiteral",0],[17,"Output"],[10,"FnOnce",288],[10,"Sized",289],[1,"usize"],[5,"String",290],[10,"FnMut",288],[10,"TokenStreamExt",0,291],[5,"IntoIter",292],[10,"TokenStream2Ext",0,293],[10,"RangeBounds",294],[6,"TokenTree",285],[5,"Span",280],[5,"TypeId",295]],"r":[[1,278],[2,293],[3,291],[4,287],[5,284]],"b":[[33,"impl-TokenParser%3CI,+PEEKER_LEN%3E"],[34,"impl-ToTokens-for-TokenParser%3CI,+PEEKER_LEN%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAA8ABgAMAAQAEgABAB0AAAAjAAAATgAAABEBBQA="}],["pulldown_cmark",{"t":"GPPPGPPFKPPPPPGPPGFPTTTTTTTTTTTPPPPGPPPPPPPPPPPPPGPPPPPPPPPPFPFPPPPPGPPPPGPPFFPPFPFPPPPPPPPPPPPPPPPPPPPGGPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCOOOOOOOOOOOOFFNNNNNNNNNNNNNNNNNNNNNNN","n":["Alignment","Autolink","BlockQuote","","BlockQuoteKind","Borrowed","Boxed","BrokenLink","BrokenLinkCallback","Caution","Center","Code","CodeBlock","","CodeBlockKind","Collapsed","CollapsedUnknown","CowStr","DefaultBrokenLinkCallback","DisplayMath","ENABLE_FOOTNOTES","ENABLE_GFM","ENABLE_HEADING_ATTRIBUTES","ENABLE_MATH","ENABLE_OLD_FOOTNOTES","ENABLE_PLUSES_DELIMITED_METADATA_BLOCKS","ENABLE_SMART_PUNCTUATION","ENABLE_STRIKETHROUGH","ENABLE_TABLES","ENABLE_TASKLISTS","ENABLE_YAML_STYLE_METADATA_BLOCKS","Email","Emphasis","","End","Event","Fenced","FootnoteDefinition","","FootnoteReference","H1","H2","H3","H4","H5","H6","HardBreak","Heading","","HeadingLevel","Html","HtmlBlock","","Image","","Important","Indented","Inline","InlineHtml","InlineMath","InlineStr","Inlined","InvalidHeadingLevel","Item","","Left","Link","","LinkType","List","","MetadataBlock","","MetadataBlockKind","None","Note","OffsetIter","Options","Paragraph","","Parser","PlusesStyle","RefDefs","Reference","ReferenceUnknown","Right","Rule","Shortcut","ShortcutUnknown","SoftBreak","Start","Strikethrough","","Strong","","Table","","TableCell","","TableHead","","TableRow","","Tag","TagEnd","TaskListMarker","Text","Tip","Warning","YamlStyle","all","as_ref","","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","clone","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","cmp","","","","","","complement","contains","default","deref","","difference","empty","eq","","","","","","","","","","","","","extend","fmt","","","","","","","","","","","","","","","","","","","","","","","","","from","","","","","","","","","","","","","","","","","","","","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","get","handle_broken_link","","hash","","","","","","","","insert","intersection","intersects","into","","","","","","","","","","","","","","","","","","into_iter","","","into_offset_iter","into_static","into_string","is_all","is_empty","is_fenced","is_indented","iter","","iter_names","link_type","new","new_ext","new_with_broken_link_callback","next","","not","partial_cmp","","","","","","reference","reference_definitions","","remove","set","span","sub","sub_assign","symmetric_difference","to_end","to_owned","","","","","","","","","","","","","","to_string","","","toggle","try_from","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","type_id","","","","","","","","","","","","","","","","","","union","utils","attrs","classes","dest_url","","id","","","level","link_type","","title","","TextMergeStream","TextMergeWithOffset","borrow","","borrow_mut","","fmt","","from","","into","","into_iter","","new","new_ext","new_ext_with_broken_link_callback","next","","try_from","","try_into","","type_id",""],"q":[[0,"pulldown_cmark"],[427,"pulldown_cmark::Tag"],[439,"pulldown_cmark::utils"],[464,"pulldown_cmark::strings"],[465,"pulldown_cmark::parse"],[466,"core::cmp"],[467,"core::iter::traits::collect"],[468,"core::fmt"],[469,"alloc::borrow"],[470,"alloc::string"],[471,"core::option"],[472,"core::hash"],[473,"core::iter::traits::iterator"],[474,"bitflags::iter"],[475,"core::result"],[476,"core::any"]],"i":"`BbAjAl`j0``AfBfBd54`66``0b00000000007651`Ad762An00000387`3878751933`6`87487`8787`45``87`Ah`::54::44989898989898``446603d844444444C`CfAbChCj5==8<6?>7B`Bb<=;654327?:>8AjAl;32>?=69j=Af<32=54BdBfb;>4Ad4Ah87An;:543>d8372:91<;6547291<444?084408372:91<;6544C`CfAbChCj55==8<7?>66B`Bb=<;;;;;6543277??????:>9AjAl0:32?>=======6Df6:jAf>3=6b000<;:98=2Ad2Ah76An:9BdBf5C`>60Cf97766Ab8812222Cj9:7=6B`:341::3:::?2d=:<9AjAl:3Bb:9>3j<?987Ch7551?Af?54>>73=<b<;:2973Ad2Ah87An;7BdBf5C`CfAb:Cjd=9;8AjAl9B`Bb:9>>`El0EnF`21021010``EhEj101010101010010101010","f":"``````````````````````````````````````````````````````````````````````````````````````````````````````````````{{}b}{{{f{d}}}{{f{h}}}}{{{f{j}}}{{f{h}}}}{{bb}b}{{{f{lb}}b}n}10{{{f{b}}}A`}021{f{{f{c}}}{}}000000400000000000{{{f{l}}}{{f{lc}}}{}}00000000000000000{{{f{Ab}}}Ab}{{{f{d}}}d}{{{f{j}}}j}{{{f{Ad}}}Ad}{{{f{Af}}}Af}{{{f{Ah}}}Ah}{{{f{Aj}}}Aj}{{{f{Al}}}Al}{{{f{An}}}An}{{{f{B`}}}B`}{{{f{Bb}}}Bb}{{{f{Bd}}}Bd}{{{f{Bf}}}Bf}{{{f{b}}}b}{{f{f{lc}}}n{}}0000000000000{fn}0000000000000{{{f{Af}}{f{Af}}}Bh}{{{f{Ah}}{f{Ah}}}Bh}{{{f{Al}}{f{Al}}}Bh}{{{f{An}}{f{An}}}Bh}{{{f{B`}}{f{B`}}}Bh}{{{f{b}}{f{b}}}Bh}{bb}{{{f{b}}b}Bj}{{}Ab}{{{f{d}}}{{f{h}}}}{{{f{j}}}{{f{h}}}}{{bb}b}{{}b}{{{f{d}}{f{d}}}Bj}{{{f{j}}{f{j}}}Bj}{{{f{Ad}}{f{Ad}}}Bj}{{{f{Af}}{f{Af}}}Bj}{{{f{Ah}}{f{Ah}}}Bj}{{{f{Aj}}{f{Aj}}}Bj}{{{f{Al}}{f{Al}}}Bj}{{{f{An}}{f{An}}}Bj}{{{f{B`}}{f{B`}}}Bj}{{{f{Bb}}{f{Bb}}}Bj}{{{f{Bd}}{f{Bd}}}Bj}{{{f{Bf}}{f{Bf}}}Bj}{{{f{b}}{f{b}}}Bj}{{{f{lb}}c}n{{Bn{}{{Bl{b}}}}}}{{{f{{C`{c}}}}{f{lCb}}}Cd{}}{{{f{Cf}}{f{lCb}}}Cd}{{{f{Ab}}{f{lCb}}}Cd}{{{f{Ch}}{f{lCb}}}Cd}{{{f{{Cj{c}}}}{f{lCb}}}CdCl}{{{f{d}}{f{lCb}}}Cd}0{{{f{j}}{f{lCb}}}Cd}0{{{f{Ad}}{f{lCb}}}Cd}{{{f{Af}}{f{lCb}}}Cd}{{{f{Ah}}{f{lCb}}}Cd}{{{f{Aj}}{f{lCb}}}Cd}{{{f{Al}}{f{lCb}}}Cd}{{{f{An}}{f{lCb}}}Cd}0{{{f{B`}}{f{lCb}}}Cd}{{{f{Bb}}{f{lCb}}}Cd}{{{f{Bd}}{f{lCb}}}Cd}{{{f{Bf}}{f{lCb}}}Cd}{{{f{b}}{f{lCb}}}Cd}0000{cc{}}00000{Cnd}{{{D`{Cn}}}j}{{{f{h}}}j}3{{{D`{h}}}j}{Dbj}{Cnj}6666{AjAl}7777777{A`{{Dd{b}}}}{A`b}00{cb{{Bn{}{{Bl{b}}}}}}{{{f{h}}}{{Dd{b}}}}{{{f{Ab}}{f{h}}}{{Dd{{f{`}}}}}}{{{f{lDf}}Cf}{{Dd{{Dh{jj}}}}}}{{{f{lCh}}Cf}{{Dd{{Dh{jj}}}}}}{{{f{d}}{f{lc}}}nDj}{{{f{j}}{f{lc}}}nDj}{{{f{Af}}{f{lc}}}nDj}{{{f{Ah}}{f{lc}}}nDj}{{{f{Al}}{f{lc}}}nDj}{{{f{An}}{f{lc}}}nDj}{{{f{B`}}{f{lc}}}nDj}{{{f{b}}{f{lc}}}nDj}{{{f{lb}}b}n}{{bb}b}{{{f{b}}b}Bj}{{}c{}}0000000000000000000{bc{}}{{{C`{c}}}{{Cj{c}}}Df}{CfCf}{jDb}{{{f{b}}}Bj}0{{{f{Ad}}}Bj}0{{{f{Ab}}}{{`{{Dl{}{{Bl{{Dh{{f{h}}{f{`}}}}}}}}}}}}{{{f{b}}}{{Dn{b}}}}{{{f{b}}}{{E`{b}}}}`{{{f{h}}}{{C`{Ch}}}}{{{f{h}}b}{{C`{Ch}}}}{{{f{h}}b{Dd{c}}}{{C`{c}}}Df}{{{f{l{C`{c}}}}}{{Dd{Bd}}}Df}{{{f{l{Cj{c}}}}}{{Dd{e}}}Df{}}{bb}{{{f{Af}}{f{Af}}}{{Dd{Bh}}}}{{{f{Ah}}{f{Ah}}}{{Dd{Bh}}}}{{{f{Al}}{f{Al}}}{{Dd{Bh}}}}{{{f{An}}{f{An}}}{{Dd{Bh}}}}{{{f{B`}}{f{B`}}}{{Dd{Bh}}}}{{{f{b}}{f{b}}}{{Dd{Bh}}}}`{{{f{{C`{c}}}}}{{f{Ab}}}Df}{{{f{{Cj{c}}}}}{{f{Ab}}}Df}{{{f{lb}}b}n}{{{f{lb}}bBj}n}`{{bb}b}20{{{f{Aj}}}Al}{fc{}}0000000000000{fDb}005{c{{Eb{e}}}{}{}}0000{{{f{h}}}{{Eb{d`}}}}1111111{Ed{{Eb{Anc}}}{}}222222{{}{{Eb{c}}}{}}00000000000000000{fEf}000000000000000008```````````````{f{{f{c}}}{}}0{{{f{l}}}{{f{lc}}}{}}0{{{f{{Eh{c}}}}{f{lCb}}}CdCl}{{{f{{Ej{c}}}}{f{lCb}}}Cd{DfCl}}{cc{}}0{{}c{}}000{c{{Eh{c}}}{{Dl{}{{Bl{Bd}}}}}}{{{f{h}}b}{{Ej{c}}}Df}{{{f{h}}b{Dd{c}}}{{Ej{c}}}Df}{{{f{l{Eh{c}}}}}{{Dd{e}}}{{Dl{}{{Bl{Bd}}}}}{}}{{{f{l{Ej{c}}}}}{{Dd{e}}}Df{}}??<<;;","D":"ACd","p":[[5,"Options",0],[5,"InlineStr",0,464],[1,"reference"],[1,"str"],[6,"CowStr",0,464],[0,"mut"],[1,"unit"],[1,"u32"],[5,"RefDefs",0,465],[6,"CodeBlockKind",0],[6,"BlockQuoteKind",0],[6,"MetadataBlockKind",0],[6,"Tag",0],[6,"TagEnd",0],[6,"HeadingLevel",0],[5,"InvalidHeadingLevel",0],[6,"LinkType",0],[6,"Event",0],[6,"Alignment",0],[6,"Ordering",466],[1,"bool"],[17,"Item"],[10,"IntoIterator",467],[5,"Parser",0,465],[5,"Formatter",468],[8,"Result",468],[5,"BrokenLink",0,465],[5,"DefaultBrokenLinkCallback",0,465],[5,"OffsetIter",0,465],[10,"Debug",468],[1,"char"],[6,"Cow",469],[5,"String",470],[6,"Option",471],[10,"BrokenLinkCallback",0,465],[1,"tuple"],[10,"Hasher",472],[10,"Iterator",473],[5,"Iter",474],[5,"IterNames",474],[6,"Result",475],[1,"usize"],[5,"TypeId",476],[5,"TextMergeStream",439],[5,"TextMergeWithOffset",439],[15,"Heading",427],[15,"Link",427],[15,"Image",427]],"r":[[7,465],[8,465],[17,464],[18,465],[60,464],[76,465],[80,465],[82,465]],"b":[[117,"impl-Options"],[118,"impl-Flags-for-Options"],[232,"impl-Debug-for-InlineStr"],[233,"impl-Display-for-InlineStr"],[234,"impl-Display-for-CowStr%3C\'a%3E"],[235,"impl-Debug-for-CowStr%3C\'a%3E"],[241,"impl-Display-for-HeadingLevel"],[242,"impl-Debug-for-HeadingLevel"],[247,"impl-UpperHex-for-Options"],[248,"impl-LowerHex-for-Options"],[249,"impl-Octal-for-Options"],[250,"impl-Binary-for-Options"],[251,"impl-Debug-for-Options"],[259,"impl-From%3CCow%3C\'a,+char%3E%3E-for-CowStr%3C\'a%3E"],[260,"impl-From%3C%26str%3E-for-CowStr%3C\'a%3E"],[262,"impl-From%3CCow%3C\'a,+str%3E%3E-for-CowStr%3C\'a%3E"],[263,"impl-From%3CString%3E-for-CowStr%3C\'a%3E"],[264,"impl-From%3Cchar%3E-for-CowStr%3C\'a%3E"],[278,"impl-Options"],[279,"impl-Flags-for-Options"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADYBLwADAAEACAAAAAoAAQAOAAAAGwADACEAAQAnAAAAKQAFADEAAQA1AAAANwACAEEAAQBEAAAASQAAAEwAAABQAAAAUgAAAFYAAABcAAMAYQACAGUAAABnAAAAbAACAHAAAQB3AAAAegBUANEAAgDWAAwA5AAYAAMBAgAHAQIADgEAABgBAAAdAQkAPAECAEEBAABEAQEASQEAAE0BAQBQAQYAWwEAAF8BEQByATcArQEDALMBBAC6AQUAxAEMAA=="}],["quote",{"t":"KKKMMMMMQNNQQNNNNM","n":["IdentFragment","ToTokens","TokenStreamExt","append","append_all","append_separated","append_terminated","fmt","format_ident","into_token_stream","","quote","quote_spanned","span","","to_token_stream","","to_tokens"],"q":[[0,"quote"],[18,"quote::ext"],[19,"proc_macro2"],[20,"core::convert"],[21,"core::iter::traits::collect"],[22,"quote::to_tokens"],[23,"quote::ident_fragment"],[24,"core::fmt"],[25,"core::option"]],"i":"```d000Ab`A`0``11000","f":"```{{{f{bd}}c}h{{l{j}}}}{{{f{bd}}c}hn}{{{f{bd}}ce}hnA`}0{{{f{Ab}}{f{bAd}}}Af}`{A`Ah}0``{{{f{Ab}}}{{Al{Aj}}}}0{{{f{A`}}}Ah}0{{{f{A`}}{f{bAh}}}h}","D":"Bf","p":[[0,"mut"],[10,"TokenStreamExt",0,18],[1,"reference"],[1,"unit"],[6,"TokenTree",19],[10,"Into",20],[10,"IntoIterator",21],[10,"ToTokens",0,22],[10,"IdentFragment",0,23],[5,"Formatter",24],[8,"Result",24],[5,"TokenStream",19],[5,"Span",19],[6,"Option",25]],"r":[[0,23],[1,22],[2,18]],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAAAAAA="}],["smallvec",{"t":"PKPGFFRFKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNQNNNNMNNNNNNNNNNNNNNNNNNO","n":["AllocErr","Array","CapacityOverflow","CollectionAllocErr","Drain","IntoIter","Item","SmallVec","ToSmallVec","append","as_mut","as_mut_ptr","as_mut_slice","","as_ptr","as_ref","as_slice","","borrow","","","","","borrow_mut","","","","","capacity","clear","clone","","clone_from","clone_into","","clone_to_uninit","","cmp","dedup","dedup_by","dedup_by_key","default","deref","deref_mut","drain","drop","","","eq","extend","extend_from_slice","fmt","","","","","from","","","","","","","","from_buf","from_buf_and_len","from_buf_and_len_unchecked","from_elem","from_iter","from_raw_parts","from_slice","from_vec","grow","hash","index","index_mut","inline_size","insert","insert_from_slice","insert_many","into","","","","into_boxed_slice","into_inner","into_iter","","","","","into_vec","is_empty","len","","new","next","","next_back","","partial_cmp","pop","push","remove","reserve","reserve_exact","resize","resize_with","retain","retain_mut","set_len","shrink_to_fit","size","size_hint","","smallvec","spilled","swap_remove","to_owned","","to_smallvec","to_string","truncate","try_from","","","","try_grow","try_into","","","","try_reserve","try_reserve_exact","type_id","","","","with_capacity","layout"],"q":[[0,"smallvec"],[139,"smallvec::CollectionAllocErr"],[140,"core::clone"],[141,"core::cmp"],[142,"core::ops::function"],[143,"core::ops::range"],[144,"core::iter::traits::collect"],[145,"core::fmt"],[146,"alloc::vec"],[147,"core::alloc::layout"],[148,"core::mem::maybe_uninit"],[149,"core::hash"],[150,"core::slice::index"],[151,"alloc::boxed"],[152,"core::result"],[153,"core::option"],[154,"alloc::string"],[155,"core::any"]],"i":"Bh`0```j``d000A`1110An221402214222122121222222220212220214402222144222222222222222202142202221220220101222222222222301`2221Cl531325313253313253Db","f":"`````````{{{f{b{d{c}}}}{f{b{d{e}}}}}hj{{j{}{{l{}}}}}}{{{f{b{d{c}}}}}{{f{bn}}}j}{{{f{b{d{c}}}}}{}j}1{{{f{b{A`{c}}}}}{{f{bn}}}j}{{{f{{d{c}}}}}{}j}{{{f{{d{c}}}}}{{f{n}}}j}0{{{f{{A`{c}}}}}{{f{n}}}j}{f{{f{c}}}{}}0200{{{f{b}}}{{f{bc}}}{}}0700{{{f{{d{c}}}}}Abj}{{{f{b{d{c}}}}}hj}{{{f{{d{c}}}}}{{d{c}}}j}{{{f{{A`{c}}}}}{{A`{c}}}{jAd}}{{{f{b{d{c}}}}{f{{d{c}}}}}hj}{{f{f{bc}}}h{}}0{fh}0{{{f{{d{c}}}}{f{{d{c}}}}}Afj}6{{{f{b{d{c}}}}e}hj{{Al{{f{b}}{f{b}}}{{Ah{Aj}}}}}}{{{f{b{d{c}}}}g}hj{}{{Al{{f{b}}}{{Ah{e}}}}}}{{}{{d{c}}}j}>{{{f{b{d{c}}}}}{{f{bn}}}j}{{{f{b{d{c}}}}e}{{An{c}}}j{{B`{Ab}}}}{{{f{b{An{c}}}}}hj}<{{{f{b{A`{c}}}}}hj}{{{f{{d{c}}}}{f{{d{e}}}}}Ajjj}{{{f{b{d{c}}}}e}hj{{Bb{}{{l{}}}}}}{{{f{b{d{c}}}}{f{n}}}hj}{{{f{{An{c}}}}{f{bBd}}}Bfj}{{{f{{d{c}}}}{f{bBd}}}Bfj}{{{f{{A`{c}}}}{f{bBd}}}Bfj}{{{f{Bh}}{f{bBd}}}Bf}0{cc{}}0{{{f{n}}}{{d{c}}}j}{Bj{{d{c}}}j}{c{{d{c}}}j}3{BlBh}41{{cAb}{{d{c}}}j}{{{Bn{c}}Ab}{{d{c}}}j}{Ab{{d{c}}}j}{c{{d{e}}}{{Bb{}{{l{}}}}}j}{{AbAb}{{d{c}}}j}87{{{f{b{d{c}}}}Ab}hj}{{{f{{d{c}}}}{f{be}}}hjC`}{{{f{{d{c}}}}e}fj{{Cb{n}}}}{{{f{b{d{c}}}}e}{{f{b}}}j{{Cb{n}}}}{{{f{{d{c}}}}}Abj}4{{{f{b{d{c}}}}Ab{f{n}}}hj}{{{f{b{d{c}}}}Abe}hj{{Bb{}{{l{}}}}}}{{}c{}}000{{{d{c}}}{{Cd{n}}}j}{{{d{c}}}{{Cf{c{d{c}}}}}j}2{{{d{c}}}ej{}}{{{f{{d{c}}}}}ej{}}{{{f{b{d{c}}}}}ej{}}5{{{d{c}}}Bjj}{{{f{{d{c}}}}}Ajj}{{{f{{An{c}}}}}Abj};{{}{{d{c}}}j}{{{f{b{An{c}}}}}Chj}{{{f{b{A`{c}}}}}Chj}10{{{f{{d{c}}}}{f{{d{c}}}}}{{Ch{Af}}}j}{{{f{b{d{c}}}}}Chj}{{{f{b{d{c}}}}}hj}{{{f{b{d{c}}}}Ab}{}j}{{{f{b{d{c}}}}Ab}hj}00{{{f{b{d{c}}}}Abe}hj{{Al{}{{Ah{}}}}}}{{{f{b{d{c}}}}e}hj{{Al{{f{b}}}{{Ah{Aj}}}}}}024{{}Ab}{{{f{{An{c}}}}}{{Cj{Ab{Ch{Ab}}}}}j}{{{f{{A`{c}}}}}{{Cj{Ab{Ch{Ab}}}}}j}`>6{fc{}}0{{{f{Cl}}}{{d{c}}}j}{fCn}8{c{{Cf{e}}}{}{}}000{{{f{b{d{c}}}}Ab}{{Cf{hBh}}}j}{{}{{Cf{c}}}{}}00011{fD`}000{Ab{{d{c}}}j}`","D":"I`","p":[[0,"mut"],[5,"SmallVec",0],[1,"reference"],[1,"unit"],[10,"Array",0],[17,"Item"],[1,"slice"],[5,"IntoIter",0],[1,"usize"],[10,"Clone",140],[6,"Ordering",141],[17,"Output"],[1,"bool"],[10,"FnMut",142],[5,"Drain",0],[10,"RangeBounds",143],[10,"IntoIterator",144],[5,"Formatter",145],[8,"Result",145],[6,"CollectionAllocErr",0],[5,"Vec",146],[8,"LayoutErr",147],[20,"MaybeUninit",148],[10,"Hasher",149],[10,"SliceIndex",150],[5,"Box",151],[6,"Result",152],[6,"Option",153],[1,"tuple"],[10,"ToSmallVec",0],[5,"String",154],[5,"TypeId",155],[15,"AllocErr",139]],"r":[],"b":[[54,"impl-Debug-for-CollectionAllocErr"],[55,"impl-Display-for-CollectionAllocErr"],[58,"impl-From%3C%26%5B%3CA+as+Array%3E::Item%5D%3E-for-SmallVec%3CA%3E"],[59,"impl-From%3CVec%3C%3CA+as+Array%3E::Item%3E%3E-for-SmallVec%3CA%3E"],[60,"impl-From%3CA%3E-for-SmallVec%3CA%3E"],[87,"impl-IntoIterator-for-SmallVec%3CA%3E"],[88,"impl-IntoIterator-for-%26SmallVec%3CA%3E"],[89,"impl-IntoIterator-for-%26mut+SmallVec%3CA%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEQAFAALAAAAEAAAABMACQAfAAcAKgACAC4ABAA0AAQAOwACAD8AAABFAAAASgACAFcABABeAAAAYQAEAHIAAQB3AAEAegAAAHwAAwCBAAMAhwADAA=="}],["unicase",{"t":"FFNNNNNNNNNNNNNNNNNNNNNHNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["Ascii","UniCase","as_ref","","ascii","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","cmp","","default","","deref","","deref_mut","","eq","","","eq_ascii","fmt","","","","from","","","","","","","","","from_str","","hash","","into","","","","","into_inner","","into_unicase","is_ascii","new","","partial_cmp","","to_folded_case","to_owned","","to_string","","try_from","","try_into","","type_id","","unicode"],"q":[[0,"unicase"],[69,"core::convert"],[70,"core::clone"],[71,"core::cmp"],[72,"core::default"],[73,"core::marker"],[74,"core::fmt"],[75,"alloc::string"],[76,"alloc::borrow"],[77,"core::result"],[78,"core::str::traits"],[79,"core::hash"],[80,"core::option"],[81,"core::any"]],"i":"``bj1101010101010101010`10`110011111111010101111010011010110101010101","f":"``{{{d{{b{c}}}}}{{d{f}}}{{h{f}}}}{{{d{{j{c}}}}}{{d{f}}}{{h{f}}}}{c{{b{c}}}{}}{d{{d{c}}}{}}0{{{d{l}}}{{d{lc}}}{}}0{{{d{{b{c}}}}}{{b{c}}}n}{{{d{{j{c}}}}}{{j{c}}}n}{{d{d{lc}}}A`{}}0{dA`}0{{{d{{b{c}}}}{d{{b{c}}}}}Ab{{h{f}}}}{{{d{{j{c}}}}{d{{j{c}}}}}Ab{{h{f}}}}{{}{{b{c}}}{{h{f}}Ad}}{{}{{j{c}}}Ad}{{{d{{b{c}}}}}{{d{c}}}{}}{{{d{{j{c}}}}}{{d{c}}}{}}{{{d{l{b{c}}}}}{{d{lc}}}{}}{{{d{l{j{c}}}}}{{d{lc}}}{}}{{{d{c}}{d{c}}}Af{{h{f}}Ah}}{{{d{{b{c}}}}{d{{b{e}}}}}Af{{h{f}}}{{h{f}}}}{{{d{{j{c}}}}{d{e}}}Af{{h{f}}}{{h{f}}}}2{{{d{{b{c}}}}{d{lAj}}}AlAn}{{{d{{b{c}}}}{d{lAj}}}AlB`}{{{d{{j{c}}}}{d{lAj}}}AlAn}{{{d{{j{c}}}}{d{lAj}}}AlB`}{Bb{{b{{Bd{f}}}}}}{{{d{f}}}{{b{Bb}}}}{c{{b{c}}}{{h{f}}}}{{{d{Bb}}}{{b{{d{f}}}}}}{{{Bd{f}}}{{b{Bb}}}}{cc{}}{{{d{f}}}{{b{{Bd{f}}}}}}{{{j{c}}}{{b{c}}}{}}2{{{d{f}}}{{Bf{{b{c}}e}}}{Bh{h{f}}}{}}{{{d{f}}}{{Bf{{j{c}}}}}Bh}{{{d{{b{c}}}}{d{le}}}A`{{h{f}}}Bj}{{{d{{j{c}}}}{d{le}}}A`{{h{f}}}Bj}{{}c{}}{{{b{{Bd{f}}}}}{{Bd{f}}}}{{{b{Bb}}}Bb}{{{b{{d{f}}}}}{{d{f}}}}3{{{b{c}}}c{}}{{{j{c}}}c{}}:{{{d{{b{c}}}}}Af{}}{c{{b{c}}}{{h{f}}}}{c{{j{c}}}{}}{{{d{{b{c}}}}{d{{b{c}}}}}{{Bl{Ab}}}{{h{f}}}}{{{d{{j{c}}}}{d{{j{c}}}}}{{Bl{Ab}}}{{h{f}}}}{{{d{{b{c}}}}}Bb{{h{f}}}}{dc{}}0{dBb}0{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{dBn}0{c{{b{c}}}{}}","D":"Bd","p":[[5,"UniCase",0],[1,"reference"],[1,"str"],[10,"AsRef",69],[5,"Ascii",0],[0,"mut"],[10,"Clone",70],[1,"unit"],[6,"Ordering",71],[10,"Default",72],[1,"bool"],[10,"Sized",73],[5,"Formatter",74],[8,"Result",74],[10,"Display",74],[10,"Debug",74],[5,"String",75],[6,"Cow",76],[6,"Result",77],[10,"FromStr",78],[10,"Hasher",79],[6,"Option",80],[5,"TypeId",81]],"r":[],"b":[[27,"impl-Display-for-UniCase%3CS%3E"],[28,"impl-Debug-for-UniCase%3CS%3E"],[29,"impl-Display-for-Ascii%3CS%3E"],[30,"impl-Debug-for-Ascii%3CS%3E"],[31,"impl-From%3CString%3E-for-UniCase%3CCow%3C\'a,+str%3E%3E"],[32,"impl-From%3C%26str%3E-for-UniCase%3CString%3E"],[33,"impl-From%3CS%3E-for-UniCase%3CS%3E"],[34,"impl-From%3C%26String%3E-for-UniCase%3C%26str%3E"],[35,"impl-From%3CCow%3C\'a,+str%3E%3E-for-UniCase%3CString%3E"],[37,"impl-From%3C%26str%3E-for-UniCase%3CCow%3C\'a,+str%3E%3E"],[38,"impl-From%3CAscii%3CS%3E%3E-for-UniCase%3CS%3E"],[45,"impl-Into%3CCow%3C\'a,+str%3E%3E-for-UniCase%3CCow%3C\'a,+str%3E%3E"],[46,"impl-Into%3CString%3E-for-UniCase%3CString%3E"],[47,"impl-Into%3C%26str%3E-for-UniCase%3C%26str%3E"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAADMACQADAAEABgARABkAAQAcAAgAJgABACkAAwAuAAIAOAABADsACQA="}],["unicode_ident",{"t":"HH","n":["is_xid_continue","is_xid_start"],"q":[[0,"unicode_ident"]],"i":"``","f":"{bd}0","D":"b","p":[[1,"char"],[1,"bool"]],"r":[],"b":[],"c":"OjAAAAAAAAA=","e":"OjAAAAEAAAAAAAEAEAAAAAEAAgA="}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[3009,6407,4216,167,218,14450,13004,1211,6472,8720,9344,978,4890,3315,219]}